<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LANDFILL</title>
  
  
  <link href="/paranoiddemon.github.io/atom.xml" rel="self"/>
  
  <link href="http://landfill.cc/"/>
  <updated>2021-03-24T16:49:02.440Z</updated>
  <id>http://landfill.cc/</id>
  
  <author>
    <name>Demon</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>恶心</title>
    <link href="http://landfill.cc/posts/nausea"/>
    <id>http://landfill.cc/posts/nausea</id>
    <published>2021-03-24T16:01:46.000Z</published>
    <updated>2021-03-24T16:49:02.440Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/paranoiddemon/picbed/imgs/Snipaste_2021-03-25_00-46-17.png" alt="Dead Pool"></p><p>这一切令人恶心，整个世界以及全部的人。空气中弥漫着腐烂的味道，死老鼠在瓦解，变成一团失水的死肉。</p><p>天空是漆黑色（#000000，如同从天而降的铁幕，密不透风，没有任何光线可以逃匿，氧气正在变得有毒。 </p><p>我感到饥饿，内脏发出惨叫，在嘶吼，饮食的欲望占据头脑，渴望进食，如同渴望饿死，遗传的原始本能占据了上风。 </p><p>分不清梦境和现实，在虐杀和死亡中来回切换，所有的迹象都汇聚成一种神谕，不可违抗的意志，时代在召唤。</p><p>相信概念，坚持理想，积极行动，都不过是徒劳，人所建筑的一切是海滩上的沙堡，一个浪就沦为废墟，什么是真正重要的，什么可以被把握，都好似无所谓，只有疲倦是人类精神永恒的归宿。 </p><p>具体的人，具体的事，都面目可憎，催吐，难以面对。等待意识上传那一天，把所有神经元击烂成一串无序0 1，无意识永生。</p>]]></content>
    
    <summary type="html">
    
      这一切令人恶心
    
    </summary>
    
    
      <category term="经验" scheme="http://landfill.cc/categories/%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Thoughts" scheme="http://landfill.cc/tags/Thoughts/"/>
    
  </entry>
  
  <entry>
    <title>语言碎片 2020/09</title>
    <link href="http://landfill.cc/posts/thoughtsof202009"/>
    <id>http://landfill.cc/posts/thoughtsof202009</id>
    <published>2020-09-26T16:22:46.000Z</published>
    <updated>2020-09-27T15:15:16.811Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/paranoiddemon/picbed/imgs/photo_2020-09-27_23-03-41.jpg" alt="Revenge of Memories"></p><p>1.<br>回忆是时间的复仇。</p><p>2.<br>Everything will flow.</p><p>3.<br>住在一间好像永远在落雨的房子，心也是皱巴巴的。</p><p>4.<br>不要把你不值钱的一切都托出 That means nothing. </p><p>5.<br>恐惧与焦虑、爱与被爱、渴望理解、精神的无依、幸福与痛苦，所有的一切都是巨大的泡影，一想起一生都要和自己的种种幻觉做斗争就累的想从楼顶跳下去。</p><p>6.<br>Pull yourself together.It’s nothing but illusion.</p><p>7.<br>当我们在回忆的时候，我们是在回忆什么，那些永远不会复现时间片段，是大脑皮层的化学反应吗，一切支离破碎的感觉是真实的吗？</p><p>8.<br>如果一个人一年拍5000张照片，那么他会在意自己从前拍了什么吗？</p><p>9.<br>生命力可能在很久以前就枯竭了。现在每天的感觉是疲倦，不是无意义。</p><p>10.<br>就是一个又一个问题接踵而至，而活着的全部过程是在解决问题。</p><p>11.<br>Everything in its wrong place.</p>]]></content>
    
    <summary type="html">
    
      胡言乱语inbox，查重率&lt;2%
    
    </summary>
    
    
      <category term="经验" scheme="http://landfill.cc/categories/%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Thoughts" scheme="http://landfill.cc/tags/Thoughts/"/>
    
  </entry>
  
  <entry>
    <title>超越规训社会/韩炳哲</title>
    <link href="http://landfill.cc/posts/Mudigkeitsgesellschaft"/>
    <id>http://landfill.cc/posts/Mudigkeitsgesellschaft</id>
    <published>2020-07-25T16:24:46.000Z</published>
    <updated>2020-07-26T05:39:28.111Z</updated>
    
    <content type="html"><![CDATA[<p>​        福柯的规训社会（ Disziplinargesellschaft）由医院、疯人院、监狱、营房和工厂构成，已经不再适用于描述当今的社会。取而代之的是另一种社会形态，由健身房、办公楼、银行、机场、购物中心和基因实验室建构的社会。21世纪的社会不再是一个规训社会，而是功绩社会。其中的成员也不再是“驯化的主体”，而是功绩主体。他们成为自身的雇主。那些规训机构的围墙，过去用来分隔正常与异常的疆域，现在变成历史的遗迹。福柯的权力理论无法阐释从规训社会转向功绩社会过程中发生的心理和形态上的变化。过去流行的概念“监控社会”（ Kontrollgesellschaft）也不再适用于这一转型，因为其中包含了过多的否定意义。<br>​<br>​       规训社会是一个否定性的社会。各种否定性的禁令在其中占据主导。否定性的情态动词一“不允许＂（ Nicht dürfen）控制着一切。“应当＂（ Sollen）中也附着否定性、强制性。功绩社会越来越摆脱了否定性。不断升级的去管制化进程取消了否定性。功绩社会使用一种积极的情态动词一打破界限的“能够”（ Können）。集体复合性的肯定句＂是的，我们可以办到！＂恰当地表达了功绩社会的积极属性。禁令、戒律和法规失去主导地位，取而代之的是种种项目计划、自发行动和内在动机。规训社会尚由否定主导，它的否定性制造出疯人和罪犯。与之相反，功绩社会则生产扣郁症患者和厌世者。<br>​<br>​        从规训社会向功绩社会的范式转移在一定程度上也存在延续性。将生产最大化的渴望显然存在于社会集体无意识之中。当生产达到定发展阶段时，禁令的规训法则，或者说其否定模式，便达到其极限。为了进步扩大生产，规训范式必须由功绩范式，或曰“能够”的肯定性模式来取代。因为当生产水平发展到一定程度时，禁令的否定性起到阻塞的效果，妨碍了继续发展。肯定性的“能够”比否定性的“应当”更有效率。因此社会集体无意识由“应当”转向“能够”。较之驯化的主体，功绩主体更高效、多产。“能够”并没有撤销“应当”。功绩主体依然接受规训。他已经逾越了规训阶段。规训法则，即“应当”式律令，保障了生产程序，“能够”则进一步提高生产水平。就提高产量而言，“应当”和“＂能够”之间不存在断裂，反而展示了一贯性。<br>​<br>​        阿兰 · 埃亨伯格（ Alain Ehrenberg）将抑郁症视作规训社会向功绩社会转型期产生的并发症状：“当控制行为的规训模式让位于另一种规范时，换言之，过去通过权威和禁令分配社会阶级和两性角色，如今每个人必须自发地行动，每个人都有义务去成就他自身，抑郁症就在这时开始盛行。抑郁定患者没有最大限度地发展自身，他在必须成就自身的努力中疲力尽。＂[1] 阿兰 · 埃亨伯格仅从自我管理的视角看待抑郁症，这是成问题的。他认为，这一社交命令一一人仅属于自身是导致抑郁症的原因。在他看来，当晚期现代的人类无法成就自身时，抑郁症就是这一失败的病理学表现。然而，正是人际关系的匮乏导致了抑郁症，这种匮乏是日益碎片化、分裂化社会的典型症状。埃亨伯格没有注意到抑郁症的这一面向。他也忽视了功绩社会内部的系统性暴力，正是这种暴力导致了精神梗阻。因此，并非“人仅属于自身”的社交命令，而是成就压力造成了过劳式抑郁症。由此可见，倦怠综合征（Burn-out- Syndrom）不是表达了筋疲力尽的自我，而是表达了疲意、燃尽的（ ausgebrannt）心灵。按照埃亨伯格的观点，当规训社会的规定和禁令让位于主体自主承担责任和自发行动时，抑郁症便开始流行。但事实上，并非过多的责任和自主性导致疾病，而是作为晚期现代社会新戒律的效绩命令（ Imperativ der Leistung）。<br>​<br>​        阿兰 · 埃亨伯格错误地把当下的人类等同于尼采的主权独立的人：“主权独立的人，不模仿任何人，尼采曾宣告他的降临，如今此类型的人即将大量出现。没有在他之上的权威告诉他，他应当成为什么样的人。因为他宣称自己只属于自身。”[2] 恰恰相反，按照尼采的观点，即将大量出现的不是主权独立的超人，而是只会劳作的“末人”（der  letzte Mensch）[3] .这种新型的人类，亳无防御地陷入过度的积极性之中，没有任何独立自主性可言。抑郁的人是一种劳作动物（ animal laboran），他在没有任何外力压迫的情况下，完全自愿地剥削自我。他同时是施暴者和受害者。自身严格来说是一个兔疫学范畴。抑郁症则彻底脱离了免疫学范式。当功绩主体不再能够（继续工作）时，抑郁症就在这一时刻爆发。它首先是种对工作、“＂能够”的倦怠感。只有在一种相信“一切皆有可能”的社会中，才有抑郁症病人发出哀収:＂没有什么是可能的。”不再能够的能够（ Nicht-Mehr- Können-Können）导向一种毀灭性的自我遺责和自我攻击。功绩主体和自身作战。抑郁症患者是这场内在战争中的伤残者。一个社会苦于过度的积极性，因此患上了抑都症。它所反映的，是那种同自身作战的人类。<br>​<br>​        功绩主体不受外在的统治机构控制，没有外力强迫他工作或剥削他。他是自身的主人和统治者。因此他无须屈从于任何人，或者说只屈从于自身。这正是他有別于规训主体之处。但尽管摆脱了统治机构，却没有导向自由。自由和约束几乎在同一时刻降临。功绩主体投身于一种强制的自由，或者说自由的强制之中，以达到最终目的效绩的最大化。[4] 工作和效绩的过度化日益严重，直到发展成一种自我剥削。这比外在的剥削更有效率，因为它伴随着一种自由的感觉。剥削者同时是被剥削者。施虐者和受害者之间不分彼此。这种自我指涉性产生了一种悖论式自由，由于其内部固有的强制结构而转化为暴力。功绩社会的精神疾病，便是这种悖论式自由在病理学上的显现。</p><hr><p>[1] Alain Ehrenberg， Das erschopfte Selbst. Depression und Gesellschaft in derGegenwart， Frankfurt a. M. 2008， S. 14<br>[2] Ebd. , S.155<br>[3] 尼采的“末人”将健康奉为神明：“他们崇拜健康。‘我们找到了幸福’——末人说着，眨眨眼睛。 （Also sprach Zarathustra， Kritische Gesamtausgabe， 5. Abteilung， 1. Band， S.14.)<br>[4]自由的原始含义即和否定性联系在一起。它永远是一种受约束的自由，以免疫学式的他者为出发点当讨度的积极性消灭了否定性时，自由也便失去了意义，由干它起源于否定之否定的辩证关系。</p>]]></content>
    
    <summary type="html">
    
      倦怠社会摘录
    
    </summary>
    
    
      <category term="摘录" scheme="http://landfill.cc/categories/%E6%91%98%E5%BD%95/"/>
    
    
      <category term="Excerpt" scheme="http://landfill.cc/tags/Excerpt/"/>
    
  </entry>
  
  <entry>
    <title>DIGITAL GRAVEYARD</title>
    <link href="http://landfill.cc/posts/gravestone"/>
    <id>http://landfill.cc/posts/gravestone</id>
    <published>2020-07-19T16:30:46.000Z</published>
    <updated>2020-07-19T05:50:15.903Z</updated>
    
    <content type="html"><![CDATA[<h2 id="贾宏声（1967-2010）"><a href="#贾宏声（1967-2010）" class="headerlink" title="贾宏声（1967-2010）"></a>贾宏声（1967-2010）</h2><p><a href="https://movie.douban.com/celebrity/1274399/" target="_blank" rel="noopener">豆瓣影人 - 贾宏声</a></p><h2 id="许立志（1990-2014）"><a href="#许立志（1990-2014）" class="headerlink" title="许立志（1990-2014）"></a>许立志（1990-2014）</h2><p><a href="http://book.ifeng.com/fukan/shikan/detail_2015_02/04/14251062_0.shtml" target="_blank" rel="noopener">许立志诗选：我咽下一枚铁做的月亮…… | 凤凰诗刊</a></p><p><a href="https://book.douban.com/subject/26342533//" target="_blank" rel="noopener">豆瓣读书 - 新的一天</a></p><h2 id="江绪林（1976-2016）"><a href="#江绪林（1976-2016）" class="headerlink" title="江绪林（1976-2016）"></a>江绪林（1976-2016）</h2><p><a href="https://theinitium.com/article/20180219-opinion-chowpochung-jiangxulin/" target="_blank" rel="noopener">周保松：一些未曾說完的話 ──紀念江緒林先生逝世兩週年</a></p><p><a href="https://www.douban.com/people/jiangxulin/" target="_blank" rel="noopener">豆瓣主页：江绪林</a></p><p><a href="https://weibo.com/u/1880142780" target="_blank" rel="noopener">微博主页：江绪林</a></p><h2 id="吴宇清（1967-2017）"><a href="#吴宇清（1967-2017）" class="headerlink" title="吴宇清（1967-2017）"></a>吴宇清（1967-2017）</h2><p><a href="https://new.qq.com/omn/20181112/20181112A0RE7G.html" target="_blank" rel="noopener">一个叫吴宇清的男人决定去死</a></p><p><a href="https://www.douban.com/people/2038558/" target="_blank" rel="noopener">豆瓣主页：外外</a></p><p><a href="https://music.douban.com/review/2695461/" target="_blank" rel="noopener">南京地下音乐记录97-98 - 关于这盒磁带</a></p><h2 id="胡波（1988-2017）"><a href="#胡波（1988-2017）" class="headerlink" title="胡波（1988-2017）"></a>胡波（1988-2017）</h2><p><a href="https://movie.douban.com/subject/27172891/" target="_blank" rel="noopener">豆瓣电影 - 大象席地而坐</a></p>]]></content>
    
    <summary type="html">
    
      记录一些名字，和生活的理由
    
    </summary>
    
    
      <category term="经验" scheme="http://landfill.cc/categories/%E7%BB%8F%E9%AA%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>去往远方的猪圈</title>
    <link href="http://landfill.cc/posts/digital-panopticon"/>
    <id>http://landfill.cc/posts/digital-panopticon</id>
    <published>2020-07-14T16:30:46.000Z</published>
    <updated>2020-08-31T13:53:49.896Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/paranoiddemon/picbed/imgs/7jlM3TEeOFthskf.png" alt="pig float in the sky"></p><p>1、</p><p>下午随手更新了一下Clash的配置文件。发现节点都无法显示。查资料发现似乎是解析配置文件的规范做了调整，于是下载了新版的Clash，发现购买的另一家机场尚未按新的规范写配置文件，又解析不了。于是又开始手动修改，浪费了人生中的一个多小时。</p><p>这些年为了跨过GFW，鼓捣了不少东西。花了很多的力气，只是为了实现那么一件本该很简单的事情：自由地访问互联网。在这件事情上我一直是个实用主义者，我只希望用早少的精力，来访问Google和YouTube罢了。虽然花一些时间暂时能实现，但这些工具终究不过是义肢，充满了不便。偶尔在中国大陆之外直接访问这些全世界都在使用的网站甚至会产生微弱的兴奋感，这是我们所独有的「小确幸」。</p><p>我只有一个观点，自由访问互联网是和自由阅读书籍一样重要的权利。任何支持GFW的言论都是可笑至极的。</p><p>2、</p><p>另一个问题是，在这个大的局域网中还有多少局域网呢？李如一的系列文章「<a href="https://blog.yitianshijie.net/2018/02/27/2nd-anniversary-of-ditching-wechat/" target="_blank" rel="noopener">告别微信两周年</a>」已经写的很详尽了。网络空间事实上已经被大公司分割成碎片，加上日益束紧的社会文化环境，「中文互联网内容枯萎」、「百度已死」似乎是一种必然，难道期待死水里盛开出什么吗？</p><p>如今，Netizen这个词已经不合时宜了，大量的当代互联网用户已经失去其主体性，访问互联网的用户只不过是面目模糊的「流量」，是数据库的数据，是广告喂食填充的禽类。而我们也相当配合，把自己装进一个个笼子里，被上传。在成熟之后，屠宰、肢解、流转、端上餐桌。商业社会有着一整套精细的流程控制这种逻辑的运转。</p><p>攻壳机动队里有个有意思的问题：如果放弃肉体，把Ghost上传到网络，在网络中如何维持个体性？还是最后都化为一团混沌？</p><p>3、</p><p>后COVID-19的世界在日益走向封闭，我也不知道在这样的浪潮里，个人能做些什么，或许如 <a href="https://www.youtube.com/watch?v=KgzQuE1pR1w" target="_blank" rel="noopener">Bill Hicks 所说</a>，see all of us as one是一种个人可以践行的心态。</p><blockquote><p>But it doesn’t matter, because it’s just a ride. And we can change it any time we want. It’s only a choice. No effort, no work, no job, no savings of money. Just a simple choice, right now, between fear and love. The eyes of fear want you to put bigger locks on your doors, buy guns, close yourself off. The eyes of love instead see all of us as one. Here’s what we can do to change the world, right now, to a better ride. Take all that money we spend on weapons and defenses each year and instead spend it feeding and clothing and educating the poor of the world, which it would pay for many times over, not one human being excluded, and we could explore space, together, both inner and outer, forever, in peace.</p></blockquote><p>4、</p><p>近期看了一些关于开源社区的资料，感觉很有启发。</p><blockquote><p><a href="http://opensourceway.community/posts/foundation_introduce/how_apache_works/" target="_blank" rel="noopener">Apache 是如何运作的？</a></p><p><a href="https://www.youtube.com/watch?v=OrxmtDw4pVI&list=WL&index=15&t=692s" target="_blank" rel="noopener">Vue.js：纪录片</a></p><p><a href="https://www.bilibili.com/video/av16549975/" target="_blank" rel="noopener">互联网之子  The Internet’s Own Boy: The Story of Aaron Swartz</a></p></blockquote><p>虽然带着浓厚的理想主义色彩，但他们和盗火的普罗米修斯一样伟大。</p><p>5、</p><p>想起 <a href="https://www.youtube.com/watch?v=pY7AT10-J_w" target="_blank" rel="noopener">紀念南亭村的一隻豬</a>，也许世界本来就是一个又一个巨大的猪圈，但不应该放弃奔跑，直到走了很远的路，看见围栏，然后跨过去。</p>]]></content>
    
    <summary type="html">
    
      如何在日渐封闭的数字世界和物理世界保持开放？
    
    </summary>
    
    
      <category term="经验" scheme="http://landfill.cc/categories/%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Thoughts" scheme="http://landfill.cc/tags/Thoughts/"/>
    
  </entry>
  
  <entry>
    <title>Google Keep 闯作收录</title>
    <link href="http://landfill.cc/posts/keep-notes"/>
    <id>http://landfill.cc/posts/keep-notes</id>
    <published>2020-07-08T16:30:46.000Z</published>
    <updated>2020-09-25T02:49:44.801Z</updated>
    
    <content type="html"><![CDATA[<h4 id="2018-3-3"><a href="#2018-3-3" class="headerlink" title="2018-3-3"></a>2018-3-3</h4><p>“答应我，不要把我遗忘！”老张临下班时紧紧攥着我的手说</p><h4 id="2018-3-23"><a href="#2018-3-23" class="headerlink" title="2018-3-23"></a>2018-3-23</h4><p>城市垃圾从广州大桥一跃而下</p><p>夺取一种真正的伟大胜利</p><p>这是它最后的尊严</p><h4 id="2018-3-28"><a href="#2018-3-28" class="headerlink" title="2018-3-28"></a>2018-3-28</h4><p>赤条条的小李在雪地里疯狂打滚</p><p>好几个小时</p><p>他炙热又痛苦的心啊</p><h4 id="2018-3-29"><a href="#2018-3-29" class="headerlink" title="2018-3-29"></a>2018-3-29</h4><p>无论如何 先活到夏天<br>看看女孩儿们的短裙<br>吃一个五羊牌甜筒<br>直到长柄伞被台风吹折</p><h4 id="2018-4-4"><a href="#2018-4-4" class="headerlink" title="2018-4-4"></a>2018-4-4</h4><p>阿森纳，坚持住<br>好事情会发生——温格下课！</p><h4 id="2018-4-14"><a href="#2018-4-14" class="headerlink" title="2018-4-14"></a>2018-4-14</h4><p>来自二沙岛中心的大功率宇宙广播，“当代生活是autoregression，保持警惕” </p><h4 id="2018-4-17"><a href="#2018-4-17" class="headerlink" title="2018-4-17"></a>2018-4-17</h4><p>1.</p><p>愚人码头<br>是不是有去往幸福的船</p><p>2.</p><p>雄性人类有没有好人，感觉没有</p><p>3.</p><p>现代人普遍焦虑，秃头成为一种进化趋势</p><h4 id="2018-5-8"><a href="#2018-5-8" class="headerlink" title="2018-5-8"></a>2018-5-8</h4><p>想了一个新媒体创业项目，开一个微信公众号，每天晚上10点更新，内容是从小区里随便抱个猫回来放在Cherry红轴机械键盘上，自由活动3分钟，阅读量每篇10w+应该没问题</p><h4 id="2018-8-12"><a href="#2018-8-12" class="headerlink" title="2018-8-12"></a>2018-8-12</h4><p>现代人走进CBD或者从一个小区走进另一个小区，会不会产生一种「又回到原点」的困惑。很多人没有手机，小区都走不出去，我敢说。更别说找到正佳广场东南门了。</p><p>我的思考，十年后的城市，一种postpostmodern建筑设计风格。写字楼，住宅全部统一设计（取消别墅），建筑长宽高统一（100×100×100m立方体），外立面统一（玻璃幕墙，反射能力强），实现一套图纸用全国，严肃，统一，整齐。取消绿化，取消路牌，取消postmodern。</p><p>一种真真正正的「钢铁森林，镜面迷宫」，走国人民一同步入communismpunk，新时代，温暖，眼角湿润。</p><h4 id="2018-9-17"><a href="#2018-9-17" class="headerlink" title="2018-9-17"></a>2018-9-17</h4><p>1.</p><p>就像是开着捷达追一列时速300的火车，所有的渴望都越来越远，直到最后一个车厢也消失在视野里，你冲出匝道，把中午吃的炒牛河通通吐了出来 </p><p>2.</p><p>山竹，带我走吧，我想回家了 </p><h4 id="2018-12-20"><a href="#2018-12-20" class="headerlink" title="2018-12-20"></a>2018-12-20</h4><p>语言是无能的，残疾的，你能感受到，但你不能说。</p><h4 id="2019-1-5"><a href="#2019-1-5" class="headerlink" title="2019-1-5"></a>2019-1-5</h4><p>你在修建通往何处的路？</p><h4 id="2019-2-24"><a href="#2019-2-24" class="headerlink" title="2019-2-24"></a>2019-2-24</h4><p>巴士 开往目的地<br>4:01 4:02 …4:59<br>无限循环<br>meta reflexion </p><h4 id="2019-3-6"><a href="#2019-3-6" class="headerlink" title="2019-3-6"></a>2019-3-6</h4><p>如果把当前的痛苦放到更长远的时间轴里，不过是茫茫痛苦里片刻。</p><h4 id="2019-4-7"><a href="#2019-4-7" class="headerlink" title="2019-4-7"></a>2019-4-7</h4><p>只是南方 </p><p>黏腻，潮湿，水泥砂浆，下水道，95#汽油味、雪茄味、鱼腥味散不开，</p><p>一洼水，漆黑一片的江边，空气静止，易拉罐上的液化水珠，分不开两张淋湿的纸</p><p>你就是在这样的味道里 变成了别的东西</p><h4 id="2019-4-28"><a href="#2019-4-28" class="headerlink" title="2019-4-28"></a>2019-4-28</h4><p>Air在1998年发行的专辑《moon safari》是对21世纪的一种昭示。人类不再囿于土地，从天空升起，一次真正的太空奥德赛。大规模漂浮的地球人像一场沙尘暴，席卷太阳系，勇敢地凝视黑洞。光速接近主，成为伟大的造物。</p><p>而2001年在不断回到过去，人类却仍然无法集体走向太空。70亿人被囚禁在地球上，一个敞口的重力牢笼，所有降临在这片土地上的生命都回避不了面前的那颗巨石。</p><h4 id="2020-4-8"><a href="#2020-4-8" class="headerlink" title="2020-4-8"></a>2020-4-8</h4><p>禽兽森林充分暴露了人体堂的反动本质，毁了一代社会主义接班人，现实生活一泡污，还天天在岛上摇树抓蝴蝶砸石头。发现索尼才真是良心会社，同样价格的主机输出4K画面，支援HDR，性能强劲，等待PS5发布那一天，一切就会好起来。</p>]]></content>
    
    <summary type="html">
    
      大量阅读锤片的后遗症，在重新努力说人话。
    
    </summary>
    
    
      <category term="经验" scheme="http://landfill.cc/categories/%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Thoughts" scheme="http://landfill.cc/tags/Thoughts/"/>
    
  </entry>
  
  <entry>
    <title>Breaking Out of the Prisoner&#39;s Dilemma</title>
    <link href="http://landfill.cc/posts/how-to-break-prison"/>
    <id>http://landfill.cc/posts/how-to-break-prison</id>
    <published>2020-07-08T16:24:46.000Z</published>
    <updated>2020-07-10T13:46:05.626Z</updated>
    
    <content type="html"><![CDATA[<p>一、</p><p>月初，本科学校有人跳楼。昨天看到同学在群里发的链接，一个知乎问题。这种事情显然是不会出现在新闻报道上的。</p><p>这几天高考，想起我曾就读的高中也是省里著名的高考工厂，每年也有很多人跳楼。最接近事故现场的一次我在几十米外的地方吃饭，后来听人复述才知道我当时就在附近。现在时间久了我都开始怀疑这件事情是否真实发生过。</p><p>我高中班主任，一提起他，他那令人恶心的笑容就还会出现在我脑海里，就常常把学生自杀这件事情当做课堂上的谈资。我还记得他讲过的一次自杀事件。当时有个学生夜里从宿舍六楼跳下来没有当场毙命，又爬到前门去敲宿管的门，然后送去了医院。寻死不成又想活下去，在他眼里似乎很好笑，他那嘲弄又幸灾乐祸的语气令人不适。不知道这位同学是否还在这个糟糕的世界上，活着的话，现在也不知道如何了。</p><p>二、</p><p>在这样怪诞的地方和时代活着的正常人，多少都有些不正常。以前本科一位老师说，中国高校每年自杀人数教育部是有quota的。这样的事情似乎常常发生，甚至需要被制度化。</p><p>在开头的知乎问题，看到很多匿名答案讲述自己的经历，那种满溢的失败感，也常常从我心里涌起。在这样一种一元的价值体系里，失败的生活是不值得过的，是理所应当的想法。但没有尽头的内卷，只会把所有人抽干。如同囚徒困境里的囚犯，互相出卖的越多，得到的效用只会越低。我们就是在朝着那个更差的均衡无限跌落。成为不值一提的代价。</p><p>三、</p><p>其实囚徒困境是有两个纳什均衡的，我们只有携手走向另一个均衡方才有救。但我想这只是痴人说梦，我们还处于霍布斯的自然状态，更侈谈合作。连日的暴雨已经令我头脑发昏，丧失理智。或许在这不讲理的世道，不做囚徒才是唯一得救。</p>]]></content>
    
    <summary type="html">
    
      或许在这不讲理的世道，不做囚徒才是唯一得救。
    
    </summary>
    
    
      <category term="经验" scheme="http://landfill.cc/categories/%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Thoughts" scheme="http://landfill.cc/tags/Thoughts/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat、Servlet与HTTP协议</title>
    <link href="http://landfill.cc/posts/tomcat-servlet-http-protocol"/>
    <id>http://landfill.cc/posts/tomcat-servlet-http-protocol</id>
    <published>2020-07-07T16:24:46.000Z</published>
    <updated>2020-07-09T16:26:37.015Z</updated>
    
    <content type="html"><![CDATA[<p>本文内容：</p><ol><li>web相关概念</li><li>web服务器软件：Tomcat</li><li>Servlet</li><li>HTTP协议</li><li>Request</li><li>Response</li></ol><h2 id="web相关概念"><a href="#web相关概念" class="headerlink" title="web相关概念"></a>web相关概念</h2><ol><li>软件架构<br>C/S 客户端<br>B/S 浏览器</li><li>资源分类<br>静态资源：所有用户访问后得到的效果是一样的   如：html css js，可以直接被浏览器解析，客户端请求<br>动态资源: 每个用户访问相同资源后，得到的结果可能不一样。 动态资源先转换为静态资源，再返回（服务端响应）给浏览器解析 如servlet/jsp php asp</li><li>网络通信三要素<br>IP：计算机等网络设备在网络中的唯一标识<br>端口：应用程序的在计算机中的唯一标识 0-65536<br>协议：规定了数据通信的规则      如TCP/UDP</li></ol><h2 id="web服务器软件"><a href="#web服务器软件" class="headerlink" title="web服务器软件"></a>web服务器软件</h2><p>服务器：安装了服务器软件的计算机<br>服务器软件：接收用户的请求，处理请求，做出响应     如：mysql服务器，web服务器<br>web服务器软件：<br>    可以部署web项目，让用户通过浏览器来访问这些项目<br>    web容器，动态资源需要通过容器来使用</p><p>常用的java相关的web服务器软件<br>    WebLogic oracle公司 大型的JavaEE服务器 支持所有的JavaEE规范  收费<br>    WebSphere：IBM 收费<br>    JBOSS:JBOSS公司 收费<br>    Tomcat：Apache基金组织，中小型的JavaEE服务器，仅支持少量的JavaEE规范servlet/jsp，开源</p><p>注：JavaEE： Java语言在企业级开发中使用的技术规范的总和，一共规定了13项大的规范</p><h2 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">1.下载 官方网站</span><br><span class="line">2.安装 解压压缩包 安装的目录不要有中文和空格</span><br><span class="line">3.卸载 删除目录就行了</span><br><span class="line">4.启动bin&#x2F;startup.bat   localhost:8080 一般会把默认端口号改为80 http协议的默认端口号访问不用再输入端口号</span><br><span class="line">5.关闭 </span><br><span class="line">   强制关闭  关闭窗口</span><br><span class="line">   正常关闭  调用shutdown.bat&#x2F; ctrl c 推荐使用</span><br><span class="line"></span><br><span class="line">6.配置 </span><br><span class="line"></span><br><span class="line">部署项目的方式：</span><br><span class="line">1. 直接将项目放在webapps目录下 &#96;http:&#x2F;&#x2F;localhost&#x2F;hello&#x2F;hello.html&#96;</span><br><span class="line">&#x2F;hello 项目的访问路径，虚拟目录 一般会将项目打成war包放到webapps目录下，war包会自动解压缩</span><br><span class="line"></span><br><span class="line">2. 在conf&#x2F;server.xml配置</span><br><span class="line">&lt;Context docBase&#x3D;&quot;D:\hello&quot; path&#x3D;&quot;&#x2F;hi&quot;&#x2F;&gt; docBase是资源所在路径，path是访问时的虚拟路径。server.xml是全局配置文件不建议直接配置</span><br><span class="line"></span><br><span class="line">3.conf\Catalina\localhost创建任意名称的xml，xml的文件名称即为虚拟目录</span><br><span class="line">&lt;Context docBase&#x3D;&quot;D:\hello&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure><p>​        </p><p><img src="https://i.loli.net/2020/07/07/jNUxvsRF36Z1p8V.png" alt="Tomcat目录结构"></p><p>静态项目和动态项目<br>    目录结构：<br>        java动态项目的目录的结构：<br>            |–根目录<br>                |–WEB-INFO （动态项目）<br>                    |–web.xml        web项目的核心配置文件<br>                    |–classes目录 放置字节码文件<br>                    |–lib目录         放置依赖的jar包</p><p>将Tomcat集成到IDEA，创建JavaEE项目 run -&gt; edit configuration-&gt;tomcat<br>热部署 update resources</p><h2 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>概念：server applet  运行在服务器上</p><p>动态资源通过逻辑性的Java代码（java类）来执行，依赖于服务器tomcat执行它<br>需要遵守一定的接口，才能被tomcat所识别</p><p>Servlet就是一个接口，定义了java类被浏览器访问到（tomcat识别到）的规则<br>自定义Servlet接口的实现类，重写方法。<br>浏览器访问相应的路径就会运行mapping的类中重写的方法</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><p>快速入门：<br>    1. 创建JavaEE项目<br>    2. 定义Servlet的实现类<br>    3. 重写所有方法<br>    4. 配置servlet</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">在web.xml中配置  把实现了Servlet的类映射到一个虚拟路径，浏览器访问该路径就会去调用该类</span><br><span class="line"><span class="comment">&lt;!--    配置servlet--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>test1<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span>  <span class="comment">&lt;!--名称自定义--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cc.landfill.web.servlet.ServletTest<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span> <span class="comment">&lt;!-- 全类名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>test1<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/test2<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span>   <span class="comment">&lt;!--虚拟路径--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在run configuration-&gt;deployment-&gt;application context，把虚拟目录修改为项目名称</p><h3 id="执行原理："><a href="#执行原理：" class="headerlink" title="执行原理："></a>执行原理：</h3><p>1.当服务器接收到客户端浏览器的请求后，会解析url路径，获取Servlet的资源路径<br>2.查找web.xml文件，是否有对应的url—pattern标签体内容<br>3.如果有则找到对应的<servlet-class>全类名<br>4.tomcat通过反射把字节码加载进入内存，并且创建Servlet对象<br>5.调用service()方法</p><p><img src="https://i.loli.net/2020/07/07/P4LFV2aZ1toGn6f.png" alt="servlet原理"></p><h3 id="Servlet的生命周期"><a href="#Servlet的生命周期" class="headerlink" title="Servlet的生命周期"></a>Servlet的生命周期</h3><p>1.被创建    init() 执行一次方法<br>    默认情况下，第一次被访问时，Servlet被创建</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">在<span class="tag">&lt;<span class="name">servlet</span>&gt;</span><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span>  标签中配置</span><br><span class="line"><span class="comment">&lt;!--        指定servlet的创建时机</span></span><br><span class="line"><span class="comment">            1.在第一次被访问时，创建   默认值为-1</span></span><br><span class="line"><span class="comment">            2.在服务器启动时，创建     0或正整数</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>5<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">Servlet 的init()执行一次，说明内存中只有一个Servlet对象，是单例的</span><br><span class="line">多个用户同时访问该对象时，存在线程安全问题，如果加锁会严重影响性能</span><br><span class="line">解决：尽可能不要定义成员变量，用局部变量。即使了定义了成员变量，也不要对其进行赋值，</span><br><span class="line">只去获取值。</span><br></pre></td></tr></table></figure><p>2.提供服务    service()  执行多次<br>    每次访问都会被调用<br>3.被销毁    service() 执行一次<br>    服务器正常关闭的时候执行，Servlet对象销毁，destroy()在被销毁之前执行，用于释放资源</p><h3 id="注解配置"><a href="#注解配置" class="headerlink" title="注解配置"></a>注解配置</h3><p>Servlet3.0:<br>支持注解配置，不再需要web.xml</p><p>步骤：</p><ol><li>选择3.0以上版本，可以不创建web.xml文件</li><li>定义Servlet接口的实现类</li><li>重写方法</li><li>在类上使用webservlet注解配置 @WebServlet(“/test4”) Servlet资源路径</li></ol><p>IDEA与Tomcat部署</p><ol><li>IDEA会为每一个tomcat部署的项目单路建立一份配置文件</li><li>项目路径</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">工作空间项目: C:\Users\demon\IdeaProjects\day13_tomcat</span><br><span class="line">tomcat部署的项目C:\Users\demon\IdeaProjects\out\artifacts\day13_tomcat_Web_exploded</span><br><span class="line">tomcat真正访问的是tomcat部署的web项目，对应工作空间项目的web目录下的所有资源</span><br></pre></td></tr></table></figure><ol start="3"><li>项目的web-info文件夹不能直接被浏览器访问，静态资源</li><li>断点调试。debug </li><li>不同项目需要设置不同的虚拟目录 application context 再下一层目录才是实际的资源的位置</li></ol><h3 id="体系结构"><a href="#体系结构" class="headerlink" title="体系结构"></a>体系结构</h3><p>Servlet                                 接口<br>    |–GenericServlet      抽象类<br>        |–HttpServlet        抽象类：继承GenericServlet</p><p><strong>GenericServlet</strong><br>在GenericServlet类中把其他方法做了空实现，只剩下一个抽象方法void Service(),只要实现一个方法</p><p><strong>HttpServlet</strong><br>对http协议的封装，简化操作</p><ol><li>定义类继承<strong>HttpServlet</strong></li><li>重写doGet() 和doPost()   根据请求的方式</li></ol><h3 id="相关配置"><a href="#相关配置" class="headerlink" title="相关配置"></a>相关配置</h3><p>urlpattern</p><ol><li>一个Servlet可以定义多个访问路径  <code>@WebServlet({&quot;/demo4-1&quot;,&quot;/demo4-2&quot;,&quot;/demo4-3&quot;})</code></li><li>路径定义规则：<br><code>/xxx</code><br><code>/xxx/xxx</code>   多层路径  目录结构 可以写成/xxx/*  可以使用通配符，通配符的优先级较低<br> <code>*.do</code>        配合demo4.do来配置 do是自定义的，可以任意</li></ol><h3 id="ServletContext"><a href="#ServletContext" class="headerlink" title="ServletContext"></a>ServletContext</h3><p>概念：代表整个web应用，可以和程序的容器（Server）通信</p><p>获取：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过从Servlet继承的方法获取</span></span><br><span class="line">ServletContext context1 = request.getServletContext();</span><br><span class="line"><span class="comment">//通过HttpServlet获取</span></span><br><span class="line">ServletContext context2 = <span class="keyword">this</span>.getServletContext();</span><br><span class="line"><span class="comment">//获取的对象是指向同一个引用的 ==</span></span><br></pre></td></tr></table></figure><p>功能：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 获取MIME类型</span><br><span class="line">MIME类型：在互联网通信过程中定义的一种文件数据类型</span><br><span class="line">格式：大类型/小类型 text/html image/jpeg</span><br><span class="line">响应的时候需要设置content-type</span><br><span class="line">获取：<span class="function">String <span class="title">getMimeType</span><span class="params">(String file)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">2. 域对象 共享数据</span></span><br><span class="line"><span class="function">范围：所有用户所有请求的数据</span></span><br><span class="line"><span class="function">在一个 Servlet存数据</span></span><br><span class="line"><span class="function">  ServletContext context </span>= <span class="keyword">this</span>.getServletContext();</span><br><span class="line">      context.setAttribute(<span class="string">"msg"</span>,<span class="string">"hello"</span>);</span><br><span class="line">在另一个 Servlet读数据</span><br><span class="line">  ServletContext context = <span class="keyword">this</span>.getServletContext();</span><br><span class="line">      Object msg = context.getAttribute(<span class="string">"msg"</span>);</span><br><span class="line">      System.out.println(msg);</span><br><span class="line">因为ServletContext的生命周期很长，会一直驻留在内存，存的数据太多会占用内存，谨慎使用</span><br><span class="line">        </span><br><span class="line"><span class="number">3</span>. 获取文件的真实（服务器）路径</span><br><span class="line">将项目部署在远程的服务器上，需要其在服务器中的真实路径</span><br><span class="line">        </span><br><span class="line"><span class="comment">//项目部署在服务器，访问的不是工作空间，而是项目路径</span></span><br><span class="line"><span class="comment">//默认是找在web目录下的？</span></span><br><span class="line">String realPath = context.getRealPath(<span class="string">"a.txt"</span>);</span><br><span class="line">System.out.println(realPath);  <span class="comment">//C:\Users\demon\IdeaProjects\out\artifacts\day15_response_war_exploded\a.txt</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//web目录下</span></span><br><span class="line">String realPath1 = context.getRealPath(<span class="string">"/a.txt"</span>);</span><br><span class="line">System.out.println(realPath1); <span class="comment">//C:\Users\demon\IdeaProjects\out\artifacts\day15_response_war_exploded\a.txt</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//web的WEB-INF目录下</span></span><br><span class="line">String realPath2 = context.getRealPath(<span class="string">"/WEB-INF/a.txt"</span>);</span><br><span class="line">System.out.println(realPath2); <span class="comment">//C:\Users\demon\IdeaProjects\out\artifacts\day15_response_war_exploded\WEB-INF\a.txt</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//src目录下</span></span><br><span class="line">String realPath3 = context.getRealPath(<span class="string">"/WEB-INF/classes/a.txt"</span>);</span><br><span class="line">System.out.println(realPath3); <span class="comment">//C:\Users\demon\IdeaProjects\out\artifacts\day15_response_war_exploded\WEB-INF\classes\a.txt</span></span><br></pre></td></tr></table></figure><h2 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h2><h3 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h3><p>概念：Hyper Text transfer Protocol    定义了客户端和服务器端通信时，传输的数据的格式  </p><p>请求消息/相应消息<br>特点：</p><ol><li>基于TCP/IP的高级协议</li><li>默认端口号为80</li><li>基于请求响应模型：一次请求对应一次相应</li><li>无状态的：每次请求之间相互独立，不能交互数据</li></ol><p>版本：</p><p>ver1.0 每次请求响应都会建立新的连接</p><p>ver1.1 复用连接</p><h3 id="Request-Response工作原理"><a href="#Request-Response工作原理" class="headerlink" title="Request/Response工作原理"></a>Request/Response工作原理</h3><ol><li>tomcatt服务器会根据url中的资源路径，创建ServletDemo1的对象（Sevelet实现类的对象）</li><li>tomcat创建request和response对象，request对象封装了请求消息数据</li><li>把两个对象作为参数传给ServletDemo1实例的Service()</li><li>通过request对象来获取请求消息数据，通过response对象来设置响应消息数据</li><li>服务器在响应浏览器之前，会从封装了响应消息的Response对象中获取响应消息数据，再返回给浏览器</li></ol><h3 id="Request"><a href="#Request" class="headerlink" title="Request"></a>Request</h3><h4 id="请求消息数据格式"><a href="#请求消息数据格式" class="headerlink" title="请求消息数据格式"></a>请求消息数据格式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">1. 请求行</span><br><span class="line">请求方式 请求url 协议&#x2F;版本</span><br><span class="line">GET&#x2F;login.html HTTP&#x2F;1.1</span><br><span class="line"></span><br><span class="line">请求方式：有7种，常用的有两种</span><br><span class="line">GET: </span><br><span class="line">请求参数在请求行中，直接跟在url后面</span><br><span class="line">请求的url长度有限制</span><br><span class="line">不安全</span><br><span class="line"></span><br><span class="line">POST：</span><br><span class="line">请求参数在请求体中</span><br><span class="line">没有url长度限制</span><br><span class="line">更安全</span><br><span class="line"></span><br><span class="line">2. 请求头</span><br><span class="line">请求头名称：请求头值   以键值对的方式出现</span><br><span class="line"></span><br><span class="line">常见请求头：</span><br><span class="line">Host</span><br><span class="line">User-Agent：浏览器告诉服务器，访问使用的浏览器及其版本，可以解决浏览器的兼容问题（因为浏览器的解析引擎不同），服务器根据</span><br><span class="line">Accept：接收响应的形式</span><br><span class="line">Referer：告诉服务器请求从哪里来</span><br><span class="line">作用：</span><br><span class="line">防盗链</span><br><span class="line">统计：判断流量的来源</span><br><span class="line">Connection； keep-alive</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">eg：</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.9,en-US;q&#x3D;0.8,en;q&#x3D;0.7,zh-HK;q&#x3D;0.6</span><br><span class="line">Cache-Control: max-age&#x3D;0</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Content-Length: 11</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br><span class="line">Cookie: Idea-41d450f1&#x3D;229dd7a7-ea44-4bf7-8c79-ca88718e85a4; JSESSIONID&#x3D;7E11EE42B5820055DDF4EA1FA317A334</span><br><span class="line">Host: localhost</span><br><span class="line">Origin: http:&#x2F;&#x2F;localhost</span><br><span class="line">Referer: http:&#x2F;&#x2F;localhost&#x2F;login.html</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;83.0.4103.116 Safari&#x2F;537.36</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3. 请求空行</span><br><span class="line">空行  用于分隔 POST的请求头和请求体</span><br><span class="line">4. 请求体</span><br><span class="line">正文  封装POST请求信息的请求参数，GET方式就没有请求体</span><br><span class="line">字符串格式  username&#x3D;jack</span><br></pre></td></tr></table></figure><ol start="5"><li><h4 id="Request的继承关系"><a href="#Request的继承关系" class="headerlink" title="Request的继承关系"></a>Request的继承关系</h4></li></ol><p>ServletRequest 接口<br>        |–HttpServletRequest 接口 继承<br>                    |–org.apache.catalina.connector.RequestFacade  Tomcat写的实现类</p><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ol><li><h5 id="获取请求消息数据："><a href="#获取请求消息数据：" class="headerlink" title="获取请求消息数据："></a>获取请求消息数据：</h5></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">获取请求行  GET  &#x2F;day14&#x2F;demo1?name&#x3D;jack HTTP&#x2F;1.1</span><br><span class="line">方法：</span><br><span class="line">String getMethod()   GET </span><br><span class="line">    String getContextPath()  &#x2F;day14  (*)重点掌握</span><br><span class="line">String getServletPath() &#x2F;demo1</span><br><span class="line">String getQueryString  name&#x3D;jack</span><br><span class="line">String getRequestURI()  &#x2F;day14&#x2F;demo1   (*)</span><br><span class="line">StringBuffer getRequestURL()  http:&#x2F;&#x2F;localhost&#x2F;day14&#x2F;demo1</span><br><span class="line">String getProtocol HTTP&#x2F;1.1</span><br><span class="line">String getRemoteAddr()  获取客户机的ip地址</span><br><span class="line"></span><br><span class="line">URL:统一资源定位符  是URL的子集</span><br><span class="line">URI:统一资源标识符  </span><br><span class="line"></span><br><span class="line">获取请求头</span><br><span class="line">String getHeader(String name) 通过请求头的名称获取请求头的值  键值对(*)</span><br><span class="line">Enumeration&lt;String&gt; getHeaderNames() 获取所有请求头名称 </span><br><span class="line"></span><br><span class="line">获取请求体</span><br><span class="line">只有POST方式才有，封装了请求参数</span><br><span class="line">步骤：</span><br><span class="line">1.获取流对象</span><br><span class="line">BufferedRead getReader() 字符流</span><br><span class="line">ServletInputStream get InputStream() 字节流  在文件上传时在讲</span><br><span class="line">2.再从流对象中获取数据</span><br></pre></td></tr></table></figure><ol start="2"><li><h5 id="其他功能"><a href="#其他功能" class="headerlink" title="其他功能"></a>其他功能</h5></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">获取请求参数通用方式  兼容GET和POST</span><br><span class="line"><span class="function">String <span class="title">getParameter</span><span class="params">(String name)</span> 根据参数名称返回参数值  如<span class="title">getParameter</span><span class="params">(<span class="string">"name"</span>)</span> </span></span><br><span class="line"><span class="function">String[] <span class="title">getParameterValues</span><span class="params">(String name)</span>  返回参数名的多个value，返回数组</span></span><br><span class="line"><span class="function">Enumeration&lt;String&gt; <span class="title">getParameterNames</span><span class="params">()</span> 获取所有参数名称</span></span><br><span class="line"><span class="function">Map&lt;String,String[]&gt; <span class="title">getParameterMap</span><span class="params">()</span> 获取所有参数的Map集合</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">TOMCAT8 在GET模式下已经将中文乱码问题解决</span></span><br><span class="line"><span class="function">POST模式 在获取参数前，设置请求request的变暗 request.<span class="title">setCharacterEncoding</span><span class="params">(<span class="string">"utf-8"</span>)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">请求转发:一种在服务器内部进行资源跳转的方式 </span></span><br><span class="line"><span class="function">步骤：</span></span><br><span class="line"><span class="function">1.通过request对象获取请求转发器对象RequestDispatcher <span class="title">getRequestDispatcher</span><span class="params">(String path)</span></span></span><br><span class="line"><span class="function">2.使用RequestDispatcherd对象进行转发 forward（ServletRequest request,ServletResponseresponse) </span></span><br><span class="line"><span class="function">    特点：</span></span><br><span class="line"><span class="function">    1.浏览器地址栏不会发生变化</span></span><br><span class="line"><span class="function">    2.服务器内部的资源的转发，转发的路径不能是外部的资源</span></span><br><span class="line"><span class="function">    3.转发是一次请求</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">共享数据</span></span><br><span class="line"><span class="function">    域对象：一个有作用范围的对象，在范围内共享数据</span></span><br><span class="line"><span class="function">    request域：代表一次请求的范围，用于请求转发的多个资源中共享数据</span></span><br><span class="line"><span class="function">    方法：</span></span><br><span class="line"><span class="function">    <span class="title">setAttribute</span><span class="params">(String name,Object obj)</span> 在第一个servlet里设置值</span></span><br><span class="line"><span class="function">    Object <span class="title">getAttribute</span><span class="params">(name)</span>  在得到转发的servlet中去接收值</span></span><br><span class="line"><span class="function">    <span class="title">removeAttribute</span><span class="params">(name)</span></span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function">获取SevrletContext</span></span><br><span class="line"><span class="function">    ServletContext <span class="title">getServletContext</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><h4 id="案例：用户登录"><a href="#案例：用户登录" class="headerlink" title="案例：用户登录"></a>案例：用户登录</h4><p>用户登录案例需求：<br>    1.编写login.html登录页面<br>        username &amp; password 两个输入框<br>    2.使用Druid数据库连接池技术,操作mysql，day14数据库中user表<br>    3.使用JdbcTemplate技术封装JDBC<br>    4.登录成功跳转到SuccessServlet展示：登录成功！用户名,欢迎您<br>    5.登录失败跳转到FailServlet展示：登录失败，用户名或密码错误<br>步骤：</p><ol><li><p>创建项目，导入html页面，数据库配置文件，jar包</p></li><li><p>获取数据库连接</p></li><li><p>创建Javabean，封装user信息</p></li><li><p>创建UserDAO 操作user表的类，写增删改查方法</p></li><li><p>写login suc fail Servlet，进行请求转发</p></li><li><p>BeanUtils工具类<br>JavaBean标准<br>类用public修饰<br>提供空参的构造器<br>成员变量必须使用private修饰<br>提供public的getter和setter</p><p>setProperty() getProperty()  populate(Object obj,Map map)封装</p></li></ol><h3 id="Response"><a href="#Response" class="headerlink" title="Response"></a>Response</h3><h4 id="响应消息数据格式"><a href="#响应消息数据格式" class="headerlink" title="响应消息数据格式"></a>响应消息数据格式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">响应行</span><br><span class="line">组成：协议&#x2F;版本  响应状态码 状态码描述  HTTP&#x2F;1.1 200 OK</span><br><span class="line"></span><br><span class="line">响应状态码：服务器告诉浏览器本次请求和响应的状态，都是3位数，分为5类</span><br><span class="line">分类：</span><br><span class="line">1xx  服务器接收客户端消息，但没有接收完成，等待一段时间后，发送1xx，询问是否还有请求</span><br><span class="line">2xx  成功。200</span><br><span class="line">3xx  重定向。302（重定向），资源跳转的方式； 304（访问缓存）</span><br><span class="line">4xx  客户端错误  404请求路径没有对应的资源 405（请求没有对应的doXxx方法，和请求方式不一致）</span><br><span class="line">5xx 服务器错误 500（服务器内部错误）</span><br><span class="line">响应头</span><br><span class="line">格式 头名称：值</span><br><span class="line">常见响应头</span><br><span class="line">Content-Type:type&#x2F;html;charset&#x3D;UTF-8</span><br><span class="line">Content-disposition 服务器告诉客户端以什么格式打开响应体数据</span><br><span class="line">默认值：in-line 在当前页面打开</span><br><span class="line">atttachment；filename&#x3D;xxx 以附件形式打开响应体。用于文件下载</span><br><span class="line">响应空行</span><br><span class="line">响应体</span><br><span class="line">真实的传输的数据 html页面 ，图片等资源</span><br></pre></td></tr></table></figure><h4 id="功能：设置响应消息"><a href="#功能：设置响应消息" class="headerlink" title="功能：设置响应消息"></a>功能：设置响应消息</h4><ol><li>设置响应行</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HTTP&#x2F;1.1 200 OK</span><br><span class="line">设置状态码：setStatus(int sc)</span><br></pre></td></tr></table></figure><ol start="2"><li>设置响应头</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setHeader(String name,String value)</span><br></pre></td></tr></table></figure><ol start="3"><li>设置响应体</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">步骤</span><br><span class="line">(1)获取输出流</span><br><span class="line">字符流PrintWriter getWriter()</span><br><span class="line">字节流 ServletOutputStream getOutputStream()</span><br><span class="line"></span><br><span class="line">(2)使用输出流将数据输出到客户端浏览器</span><br></pre></td></tr></table></figure><h4 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h4><ol><li><h5 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h5></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">(1)实现：</span><br><span class="line">&#x2F;* &#x2F;&#x2F;方式一：访问&#x2F;reresponseDemo1 会自动跳转到responseDemo2</span><br><span class="line">&#x2F;&#x2F;1.设置响应行的状态码为302</span><br><span class="line">response.setStatus(302);</span><br><span class="line">&#x2F;&#x2F;2.设置响应头location</span><br><span class="line">response.setHeader(&quot;location&quot;,&quot;&#x2F;day15&#x2F;responseDemo2&quot;);  &#x2F;&#x2F;虚拟路径+资源路径*&#x2F;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;方式二：</span><br><span class="line">response.sendRedirect(&quot;&#x2F;day15&#x2F;responseDemo2&quot;); &#x2F;&#x2F;可以是任意的url</span><br><span class="line"></span><br><span class="line">(2)特点：转发vs重定向</span><br><span class="line">转发：forward</span><br><span class="line">1.转发地址栏路径不变</span><br><span class="line">2.只能访问当前服务器路径下的资源</span><br><span class="line">3.转发是一次请求，可以使用request对象共享数据</span><br><span class="line"></span><br><span class="line">重定向：redirect</span><br><span class="line">1.地址栏发生变化</span><br><span class="line">2.可以访问其他服务器的资源</span><br><span class="line">3.重定向是两次请求，不再能使用request对象共享数据，两次req&#x2F;resp是不同的</span><br><span class="line"></span><br><span class="line">(3)路径写法</span><br><span class="line">1.相对路径：以.开头 .&#x2F;index.html</span><br><span class="line">确定当前资源和目标资源之间的位置关系</span><br><span class="line">例1 .&#x2F; 当前目录</span><br><span class="line">当前：http:&#x2F;&#x2F;localhost&#x2F;day15&#x2F;location.html</span><br><span class="line">目标：http:&#x2F;&#x2F;localhost&#x2F;day15&#x2F;responseDemo1</span><br><span class="line">路径为 .&#x2F;responseDemo1  可以省略为responseDemo1</span><br><span class="line">例2 ..&#x2F; 后退一级目录</span><br><span class="line">当前：http:&#x2F;&#x2F;localhost&#x2F;day15&#x2F;htmls&#x2F;location.html</span><br><span class="line">目标：http:&#x2F;&#x2F;localhost&#x2F;day15&#x2F;responseDemo1</span><br><span class="line">路径为 ..&#x2F;responseDemo1</span><br><span class="line"></span><br><span class="line">2.绝对路径： 以&#x2F;开头</span><br><span class="line">通过绝对路径可以确定唯一资源 如http:&#x2F;&#x2F;localhost&#x2F;day15&#x2F;responseDemo1</span><br><span class="line">可以省略协议，ip，端口&#x2F;day15&#x2F;responseDemo1</span><br><span class="line"></span><br><span class="line">3.使用规则：根据使用的对象决定是否加虚拟目录</span><br><span class="line">给客户端浏览器使用：需要加虚拟目录，如重定向，&lt;a&gt; &lt;form&gt;</span><br><span class="line">response.sendRedirect(&quot;&#x2F;day15&#x2F;responseDemo2&quot;);</span><br><span class="line">给服务器使用：不需要加虚拟目录，如转发时,就不要写虚拟目录</span><br><span class="line">request.getRequestDispatcher(&quot;&#x2F;xxxServlet&quot;).forward(request,response);</span><br><span class="line"></span><br><span class="line">4.动态获取虚拟目录</span><br><span class="line">String request.getContextPath()</span><br><span class="line">response.sendRedirect(contextPath+&quot;资源名称&quot;),更改虚拟目录不需要大量调整代码</span><br><span class="line">客户端的虚拟目录也可以动态获取：jsp</span><br></pre></td></tr></table></figure><ol start="2"><li><h5 id="服务器输出字符数据到浏览器"><a href="#服务器输出字符数据到浏览器" class="headerlink" title="服务器输出字符数据到浏览器"></a>服务器输出字符数据到浏览器</h5></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*设置编码格式 防止乱码问题</span><br><span class="line">方式一：</span><br><span class="line">&#x2F;&#x2F;在获取流之前，设置流的默认编码（ISO-8859-1）为需要的编码格式</span><br><span class="line">response.setCharacterEncoding(&quot;utf-8&quot;);</span><br><span class="line">&#x2F;&#x2F;告诉浏览器，服务器发送的消息编码格式，建议浏览器使用该编码解码</span><br><span class="line">response.setHeader(&quot;content-type&quot;,&quot;text&#x2F;html;charset&#x3D;utf-8&quot; );  &#x2F;&#x2F;text是html的根本的格式*&#x2F;</span><br><span class="line">&#x2F;&#x2F;方式二</span><br><span class="line">response.setContentType(&quot;text&#x2F;html;charset&#x3D;utf-8&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;1.获取字符输出流</span><br><span class="line">PrintWriter pw &#x3D; response.getWriter();  &#x2F;&#x2F;不需要关流，response一次响应结束后自动回销毁，自己做了关闭流的操作</span><br><span class="line">&#x2F;&#x2F;2.输出数据</span><br><span class="line">&#x2F;&#x2F; pw.write(&quot;hello response&quot;);</span><br><span class="line">&#x2F;&#x2F; pw.write(&quot;&lt;h1&gt;hello response&lt;&#x2F;h1&gt;&quot;);</span><br><span class="line">pw.write(&quot;你好啊 响应&quot;);</span><br></pre></td></tr></table></figure><ol start="3"><li><h5 id="服务器输出字节数据到浏览器"><a href="#服务器输出字节数据到浏览器" class="headerlink" title="服务器输出字节数据到浏览器"></a>服务器输出字节数据到浏览器</h5></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">response.setContentType(&quot;text&#x2F;html;charset&#x3D;utf-8&quot;);</span><br><span class="line">&#x2F;&#x2F;1.获取字节输出流</span><br><span class="line">ServletOutputStream sos &#x3D; response.getOutputStream();</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;2.输出数据</span><br><span class="line">sos.write(&quot;hello 你好&quot;.getBytes(&quot;utf-8&quot;));  &#x2F;&#x2F;Chrome默认的字符集是随系统的GBK</span><br></pre></td></tr></table></figure><ol start="4"><li><h5 id="生成验证码"><a href="#生成验证码" class="headerlink" title="生成验证码"></a>生成验证码</h5></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">本质是图片 防止恶意的表单注册</span><br><span class="line"></span><br><span class="line">Servlet代码</span><br><span class="line">int width &#x3D; 100;</span><br><span class="line">        int height &#x3D; 50;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;1.创建一个对象，验证码图片的对象</span><br><span class="line">        BufferedImage image &#x3D; new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        &#x2F;&#x2F;2.生成验证码图片</span><br><span class="line">        &#x2F;&#x2F;2.1 填充背景色</span><br><span class="line">        Graphics graphics &#x3D; image.getGraphics(); &#x2F;&#x2F;画笔对象</span><br><span class="line">        graphics.setColor(Color.pink);  &#x2F;&#x2F;设置颜色</span><br><span class="line">        graphics.fillRect(0,0,width,height);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;2.2 画边框</span><br><span class="line">        graphics.setColor(Color.BLUE);</span><br><span class="line">        graphics.drawRect(0,0,width-1,height-1);   &#x2F;&#x2F;0,0是左上角的坐标,边框有一个px</span><br><span class="line">        String str &#x3D;&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&quot;;</span><br><span class="line">        Random random &#x3D; new Random();</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;2.3 写验证码</span><br><span class="line">        for (int i &#x3D; 1; i &lt;5 ; i++) &#123;</span><br><span class="line">            int index &#x3D; random.nextInt(str.length());  &#x2F;&#x2F;随机角标</span><br><span class="line">            char ch &#x3D; str.charAt(index);</span><br><span class="line">            graphics.drawString(ch+&quot;&quot;,width&#x2F;5*i,height&#x2F;2);</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F;2.4 画干扰线</span><br><span class="line">        graphics.setColor(Color.green);</span><br><span class="line">        for (int i &#x3D; 0; i &lt;5 ; i++) &#123;</span><br><span class="line">            int x1 &#x3D; random.nextInt(width);</span><br><span class="line">            int x2 &#x3D; random.nextInt(width);</span><br><span class="line">            int y1 &#x3D; random.nextInt(height);</span><br><span class="line">            int y2 &#x3D; random.nextInt(width);</span><br><span class="line">            graphics.drawLine(x1,y1,x2,y2);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        &#x2F;&#x2F;3.输出到页面</span><br><span class="line">        ImageIO.write(image,&quot;jpg&quot;,response.getOutputStream());</span><br><span class="line">        &#x2F;&#x2F;从内存中输出的图片，那这里还有response吗？</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">HTML页面 </span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;img id&#x3D;&quot;checkCode&quot; src&#x3D;&quot;&#x2F;day15&#x2F;checkCodeServlet&quot;&#x2F;&gt;</span><br><span class="line">    &lt;a id&#x3D;&quot;change&quot; href&#x3D;&quot;&quot;&gt;看不清，换一张&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">       &#x2F;* 1.给超链接和图片绑定单击事件</span><br><span class="line">        2.重新设置图片的src属性*&#x2F;</span><br><span class="line">        window.onload &#x3D; function()&#123;</span><br><span class="line">           var img &#x3D; document.getElementById(&quot;checkCode&quot;);</span><br><span class="line">           img.onclick &#x3D; function()&#123;</span><br><span class="line">               &#x2F;&#x2F;加时间戳,解决缓存问题，每次都传一个不重复的参数</span><br><span class="line">               var date &#x3D; new Date().getTime();</span><br><span class="line">               img.src&#x3D;&quot;&#x2F;day15&#x2F;checkCodeServlet?&quot;+date;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"> &lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h4 id="案例：文件下载"><a href="#案例：文件下载" class="headerlink" title="案例：文件下载"></a>案例：文件下载</h4><p>需求：</p><ol><li>页面显示超链接</li><li>点击超链接弹出下载提示框</li><li>完成图片文件下载</li></ol><p>超链接指向的资源，如果可以被浏览器解析，则直接展示，不能解析则下载。使用响应头的content-dispostion:attachment;filename=xxx</p><p>步骤：</p><ol><li><p>定义页面，超链接指向一个servlet，传递资源的名称filename</p></li><li><p>定义servlet，获取filename，使用字节输入流加载文件进内存</p></li><li><p>设置响应头 content-dispostion:attachment;filename=xxx</p></li><li><p>将数据写出到response输出流</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">HTML页面</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;a href&#x3D;&quot;&#x2F;day15&#x2F;downloadServlet?filename&#x3D;img1.jpg&quot;&gt;image1&lt;&#x2F;a&gt;  加虚拟路径图片格式</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">@WebServlet(&quot;&#x2F;downloadServlet&quot;)</span><br><span class="line">public class DownloadServlet extends HttpServlet &#123;</span><br><span class="line">    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">        String filename &#x3D; request.getParameter(&quot;filename&quot;);</span><br><span class="line">        ServletContext servletContext &#x3D; this.getServletContext();</span><br><span class="line">        &#x2F;&#x2F;获取内容类型，设置返回内容类型</span><br><span class="line">        String mimeType &#x3D; servletContext.getMimeType(filename);</span><br><span class="line">        response.setHeader(&quot;content-type&quot;,mimeType);</span><br><span class="line">        &#x2F;&#x2F;获取真实路径</span><br><span class="line">        String realPath &#x3D; servletContext.getRealPath(&quot;img&quot;+filename);  &#x2F;&#x2F;这里不要加&#x2F;web &#x2F;指的就是web，WEB-INF特殊</span><br><span class="line">        FileInputStream fis &#x3D; new FileInputStream(new File(realPath)); &#x2F;&#x2F;不要加引号</span><br><span class="line">        response.setHeader(&quot;content-disposition&quot;, &quot;attachment;filename&#x3D;&quot;+filename);</span><br><span class="line">        ServletOutputStream os &#x3D; response.getOutputStream();</span><br><span class="line">        byte[] buffer &#x3D; new byte[1024*8];</span><br><span class="line">        int len;</span><br><span class="line">        while ((len&#x3D;fis.read(buffer))!&#x3D;-1)&#123;</span><br><span class="line">           os.write(buffer,0,len);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fis.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>下载文件名中文乱码</p><p>获取客户端的浏览器版本信息</p><p>根据不同版本信息，去设置编码方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;解决中文文件名问题：在设置响应头之前设置编码方式</span><br><span class="line">        &#x2F;&#x2F;获取请求头的ua</span><br><span class="line">        String agent &#x3D; request.getHeader(&quot;user-agent&quot;);</span><br><span class="line">        &#x2F;&#x2F;使用工具类方法编码文件名</span><br><span class="line">        filename &#x3D; DownLoadUtils.getFileName(agent, filename);</span><br><span class="line">         response.setHeader(&quot;content-disposition&quot;, &quot;attachment;filename&#x3D;&quot;+filename);</span><br></pre></td></tr></table></figure><p>可以实现局域网内文件传输</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.把需要传输的文件放入img文件夹</span><br><span class="line">2.在download.html 修改filename</span><br><span class="line">3.启动服务器</span><br><span class="line">4.从手机端，或者另一台电脑访问192.168.2.116&#x2F;day15&#x2F;download.html</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Tomcat部署、Servlet原理，HTTP协议的请求响应
    
    </summary>
    
    
      <category term="笔记" scheme="http://landfill.cc/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Java" scheme="http://landfill.cc/tags/Java/"/>
    
      <category term="Web" scheme="http://landfill.cc/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Aria2+Bilibili Evolved批量下载B站视频</title>
    <link href="http://landfill.cc/posts/aria2-bilibili"/>
    <id>http://landfill.cc/posts/aria2-bilibili</id>
    <published>2020-07-06T16:24:46.000Z</published>
    <updated>2020-07-08T12:45:08.416Z</updated>
    
    <content type="html"><![CDATA[<p>1、下载文件</p><p><a href="https://github.com/aria2/aria2/releases/tag/release-1.35.0" target="_blank" rel="noopener">aira2 release</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">修改路径 aria2-1.34.0-win-64bit-build1&#96; -&gt; &#96;bin</span><br></pre></td></tr></table></figure><p><a href="https://github.com/ttttmr/aria2-conf" target="_blank" rel="noopener">aira2配置</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;ttttmr&#x2F;aria2-conf.git</span><br><span class="line"></span><br><span class="line">修改路径aria2-conf-master&#96; -&gt; &#96;conf</span><br></pre></td></tr></table></figure><p>2、配置环境变量</p><p>右键此电脑 -&gt;高级系统设置 -&gt; 环境变量 -&gt;系统变量-&gt;新建Path </p><p>把aria2c.exe所在的bin目录填进去<code>D:\portable_program\aria2\bin</code></p><p>3、配置必要信息 conf/aria2.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#设置密码</span><br><span class="line">18 rpc-secret &#x3D; xxxxxx</span><br><span class="line">...</span><br><span class="line">89 dir &#x3D; D:\Download</span><br><span class="line">#填默认下载目录</span><br></pre></td></tr></table></figure><p>4、启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">如果要自启动 把HideRun.vbs的快捷方式发送到</span><br><span class="line">startup  %APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup</span><br><span class="line"></span><br><span class="line">启动双击 start.bat ，后台运行双击 HideRun.vbs ，关闭双击 stop.bat ，重启双击 restart.bat</span><br></pre></td></tr></table></figure><p>5、配置webui-aria2 </p><p><a href="http://webui-aria2.ghostry.cn" target="_blank" rel="noopener">webui-aria2</a>是aira2的GUI。填入刚才conf设置的秘钥</p><img src="https://i.loli.net/2020/07/08/sOyTv1ZR75MLYif.png" alt="webui-aria2配置" style="zoom:67%;" /><p>6、安装TemperMonkey脚本 BilibiliEvolved</p><p>7、附加功能-&gt;下载视频-&gt;批量导出-&gt;aria2 RPC ，配置同上。开始下载就可以了。</p><p>8、按需要可以配合Chrome插件接管浏览器的下载。</p><p>参考：<a href="https://tmr.js.org/p/1aa3893d/" target="_blank" rel="noopener">aria2 简单使用</a></p>]]></content>
    
    <summary type="html">
    
      批量下载B站视频
    
    </summary>
    
    
      <category term="其他" scheme="http://landfill.cc/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="Aria2" scheme="http://landfill.cc/tags/Aria2/"/>
    
  </entry>
  
  <entry>
    <title>如何确立一种深信不疑</title>
    <link href="http://landfill.cc/posts/how-to-believe"/>
    <id>http://landfill.cc/posts/how-to-believe</id>
    <published>2020-06-30T16:24:46.000Z</published>
    <updated>2020-07-10T00:06:22.276Z</updated>
    
    <content type="html"><![CDATA[<p>一、<br>Fortran语言之父John Backus 在获得图灵奖的时候讲了这么一段话，描述冯诺依曼瓶颈</p><blockquote><p>Surely there must be a less primitive way of making big changes in the store than by pushing vast numbers of words back and forth through the von Neumann bottleneck. Not only is this tube a literal bottleneck for the data traffic of a problem, but, more importantly, it is an intellectual bottleneck that has kept us tied to word-at-a-time thinking instead of encouraging us to think in terms of the larger conceptual units of the task at hand. Thus programming is basically planning and detailing the enormous traffic of words through the von Neumann bottleneck, and much of that traffic concerns not significant data itself, but where to find it.</p></blockquote><p>“intellectual bottleneck “这个词精确而微妙。genetic bottleneck，intellectual bottleneck，谁在束缚你？</p><p>二、</p><p>最近在知乎读到一个问题：<a href="https://www.zhihu.com/question/264893261/answer/286954136" target="_blank" rel="noopener">为什么矩形面积等于长乘宽?</a> 那么多显而易见的问题，并不是那么得显而易见。</p><p>回答里甚至有人说，这是小学生都懂的东西。从某种程度上来说，我们都可以算是他口中的小学生。对于某些问题不应该去深究，这是做正常人的要义。这是我们一直受到的教育，「服从」是我们教育里很糟糕的一点，渗透在社会的每一个角落，讨厌至极。</p><p>三、</p><p>我发现，当进入一种生活模式后，人就会陷入一种时间的惯性，生活坍缩进一个没有维度的空间，很难去怀疑那些如真理的日常的正当性。很多人对生活道路的深信不疑就来自于这样一种未经考量的惯性。</p><p>现在才渐渐意识到用一些时间去审视过去是有帮助的。没有白走的路，也没有不付出代价的选择。至少还不算太晚明白。用行动去实践意义，而不是空想。</p><p>四、</p><p>Why not thinking in terms of the bigger picture?</p>]]></content>
    
    <summary type="html">
    
      Why not thinking in terms of the bigger picture?
    
    </summary>
    
    
      <category term="经验" scheme="http://landfill.cc/categories/%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Thoughts" scheme="http://landfill.cc/tags/Thoughts/"/>
    
  </entry>
  
  <entry>
    <title>更换电脑Hexo博客迁移</title>
    <link href="http://landfill.cc/posts/hexo-blog-sync"/>
    <id>http://landfill.cc/posts/hexo-blog-sync</id>
    <published>2020-06-20T16:22:46.000Z</published>
    <updated>2020-08-08T10:18:44.936Z</updated>
    
    <content type="html"><![CDATA[<p><strong>上传电脑中博客的源文件</strong></p><p>1.生成的静态网页(.deploy_git)放在master分支在paranoiddeon.github.io 新建hexo分支存放博客源文件(除.deploy_git外的文件)，在该仓库的setting&gt;branch&gt;default branch设为hexo。在本地任意目录打开git bash：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:paranoiddeon&#x2F;paranoiddeon.github.io.git</span><br></pre></td></tr></table></figure><p>2.在克隆到本地的paranoiddeon.github.io中，把除了.git 文件夹外的所有文件都删掉。把之前博客文件夹中除了.deploy_git的文件全部复制到paranoiddeon.github.io中，删除theme文件夹中可能存在的.git 文件夹，避免嵌套上传失败。之后把博客的源文件上传到hexo分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit –m &quot;add branch&quot;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>3.因为之前博客使用的主题是从第三方仓库clone的，在执行git add .的时候出现了”fatal: in unpopulated submodule maupassuant” 错误，导致主题文件夹没有被上传，所以需要删除再重新add该目录，在theme目录中执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git rm -rf --cached maupassuant  &#x2F;&#x2F;删除文件夹</span><br><span class="line">git add maupassuant</span><br></pre></td></tr></table></figure><p><strong>在新电脑(Windows)重新搭建环境</strong></p><p>1.<a href="https://gitforwindows.org/" target="_blank" rel="noopener">下载安装Git</a></p><p>2.设置git全局邮箱和用户名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourgithubname&quot;</span><br><span class="line">git config --global user.email &quot;yourgithubemail&quot;</span><br></pre></td></tr></table></figure><p>3.设置ssh key</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br><span class="line">Are you sure you want to continue connecting (yes&#x2F;no)? </span><br><span class="line">#输入yes 生成后填到github 在提示的文件目录复制id_rsa.pub 添加到github（settings&gt;SSH keys)</span><br><span class="line">#验证是否成功</span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>4.<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">下载安装nodejs</a><br>5.安装hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>6.在新电脑clone博客源文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:paranoiddeon&#x2F;paranoiddeon.github.io.git</span><br></pre></td></tr></table></figure><p>7.安装hexo-deployer-git</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd paranoiddeon.github.io</span><br><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">&#x2F;&#x2F;用于将 public 目录中的文件和目录推送至 _config.yml 中指定的远端仓库和分支中，</span><br><span class="line">&#x2F;&#x2F;并且完全覆盖该分支下的已有内容。</span><br></pre></td></tr></table></figure><p>8.生成部署博客网页</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>如果在多台电脑上同步博客，写完上传到远程仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .  &#x2F;&#x2F;所有变化提交到暂存区，包括文件内容修改(modified)以及新文件(new)</span><br><span class="line">git commit –m &quot;xxxx&quot; &#x2F;&#x2F;将暂存区里的改动给提交到本地的版本库。</span><br><span class="line">git push  &#x2F;&#x2F;将本地版本库的分支推送到远程服务器上对应的分支</span><br></pre></td></tr></table></figure><p>在另一台电脑pull</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull&#x2F;&#x2F;取回远程主机某个分支的更新，再与本地的指定分支合并</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      hexo博客迁移
    
    </summary>
    
    
      <category term="其他" scheme="http://landfill.cc/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="Blog" scheme="http://landfill.cc/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>GOG连接PSN超时解决方法</title>
    <link href="http://landfill.cc/posts/psn-gog-connection"/>
    <id>http://landfill.cc/posts/psn-gog-connection</id>
    <published>2020-06-17T09:24:46.000Z</published>
    <updated>2020-06-30T01:08:53.585Z</updated>
    
    <content type="html"><![CDATA[<p><strong>关闭两步验证，获取 “sso cookie”</strong></p><p>turn off 2-step verification first<br>log in to PSN (store.playstation.com) through your browser<br>after the login open this link: <a href="https://ca.account.sony.com/api/v1/ssocookie" target="_blank" rel="noopener">https://ca.account.sony.com/api/v1/ssocookie</a><br>Copy content of “npsso”</p><p><strong>修改代码，本地验证</strong><br>open windows explorer and enter the following into the address bar at the top and press enter</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%LocalAppData%\GOG.com\Galaxy\plugins\installed\</span><br></pre></td></tr></table></figure><p>open the psn_{random number} folder and edit the plugin.py file with your favourite text editor<br>go to line 64 and change it from:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stored_npsso = stored_credentials.get(<span class="string">"npsso"</span>) <span class="keyword">if</span> stored_credentials <span class="keyword">else</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure><p>to:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stored_npsso = <span class="string">"Copied value of npsso"</span></span><br></pre></td></tr></table></figure><p>(“copied value of npsso” should be a 64 character long text consisting of numbers, lower case letters and upper case letters)   (the quotation marks “ “ are important!)<br>In addition to totally REPLACING the line 64, delete lines 65 and 66<br>the line 64 has to start after 8 blank SPACES (do not use tabs)</p><p><strong>重启gog再连接</strong><br>restart GOG Galaxy<br>try connecting with PSN again </p>]]></content>
    
    <summary type="html">
    
      Playstation connection timed out问题解决，领取PC版巫师3
    
    </summary>
    
    
      <category term="其他" scheme="http://landfill.cc/categories/%E5%85%B6%E4%BB%96/"/>
    
    
  </entry>
  
  <entry>
    <title>语言碎片 2020/06</title>
    <link href="http://landfill.cc/posts/thoughtsof202006"/>
    <id>http://landfill.cc/posts/thoughtsof202006</id>
    <published>2020-06-14T14:22:46.000Z</published>
    <updated>2020-08-31T13:48:41.745Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/paranoiddemon/picbed/imgs/BmZ6bakR5LsFWrA.png" alt="Tears With Blood"></p><p>1.<br>既然可以随时选择死，为什么不换种活法</p><p>2.<br>为什么这样子，我真的不理解</p><p>3.<br>人是如此的易驯服，被他们那套搞一搞，成为一头圈养的家猪，变得丑陋而讨厌，仿佛生下来就在等待屠宰，野猪的精气神儿就完全不一样。</p><p>4.<br>Welcome to the slaughterhouse!</p><p>5.<br>What kind of savages are we？ What kind of country do we live in？</p><p>6.<br>痛苦的药方就在痛苦之中</p><p>7.<br>活着成为猪和死了也不知道哪个更可怕</p><p>8.<br>行动！加速融入生活</p><p>9.<br>哦 眼泪~</p><p>10.<br>眼睛都哭模糊了，浴室，我的伤心地</p><p>11.<br>2020，罗大佑年，多次落泪，就这么飘来飘去，哪里是你的家？</p><p>12.<br>黑暗好像一颗巨石，按在胸口</p><p>13.<br>夏，十五日夜，秘密发丧，埋于后山。</p><p>14.<br>凑活过，一种普世生活哲学，好像一切都能缝补，slogan是「害想咋地？」</p><p>15.<br>舒展眉头<br>过失败而渺小的人生<br>也是一种伟大</p><p>16.<br>平行世界是真实存在的</p>]]></content>
    
    <summary type="html">
    
      胡言乱语inbox，查重率&lt;2%
    
    </summary>
    
    
      <category term="经验" scheme="http://landfill.cc/categories/%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Thoughts" scheme="http://landfill.cc/tags/Thoughts/"/>
    
  </entry>
  
  <entry>
    <title>香港选举制度</title>
    <link href="http://landfill.cc/posts/hk-election"/>
    <id>http://landfill.cc/posts/hk-election</id>
    <published>2020-06-10T16:22:46.000Z</published>
    <updated>2020-06-30T01:09:23.734Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、特首选举："><a href="#一、特首选举：" class="headerlink" title="一、特首选举："></a>一、特首选举：</h1><p>1、特首 </p><p>任期5年，可以连任一届，获得601票以上。</p><p>候选人需获得选委会150人以上提名（提前三个月）</p><p>2、选委会</p><p><img src="https://i.loli.net/2020/06/11/dknejl2QoXs7Nri.png" alt="选委会构成"></p><p>由20多万专业界别登记的选民选出，选举委员会委员是以个人身份投票，而选举委员会每届任期五年</p><p>其中宗教界界别分组（60名委员）是由六个指定团体提名产生。<br>香港地区全国人民代表大会代表（36名委员）及立法会议员（70名委员）为当然委员。<br>117个（港九57+新界60）经由民选区议员相互选出而产生</p><p> 选委会的代表性和有权选举的人存在诸多<strong>不合理</strong>之处：</p><blockquote><p>例如代表中小学教师的教育界有80,643人有权投票，可选出30个选举委员；与此同时，渔农界只有154人有权投票，却可选出60个选举委员。<br>有些组别例如会计界，只要是注册会计师就可以投票，全港近三万名名会计从业员中有26,001人是选民。但到了保险界，却只有保险公司的东主才可以投票，于是全港近五万名的保险从业员都没有投票权，只有131名东主是选民。至于为什么会计界和保险界有不同做法，是没有解释的。<br>回到刚才提到的渔农界，那154人和现役渔民或农民不一定有关，也不是由他们所选出，而是由规定的一系列渔农业团体作为代表。至于为什么是这些团体而不是另一些团体，这些团体是否有代表性，新成立的团体要怎样才可能为被指定的团体，同样是没有解释的。</p></blockquote><h1 id="二、立法会选举"><a href="#二、立法会选举" class="headerlink" title="二、立法会选举"></a>二、立法会选举</h1><p>职责：</p><ul><li>制定、修改和废除法律（参见：三读）</li><li>控制公共开支</li><li>监察政府工作</li><li>审核、通过政府的财政预算</li><li>接受香港居民申诉</li><li>同意终审法院法官和高等法院首席法官的任免</li><li>如立法会全体议员四分之一联合动议，指控行政长官有严重违法或渎职行为而不辞职的话，立法会可通过进行调查，并委托终审法院首席法官组成独立调查委员会进行调查。如调查委员会调查后认为有足够证据构成对行政长官的指控，立法会会对是否提出弹劾案进行表决。如果立法会以全体议员三分之二通过的话，可提出弹劾行政长官案，并报请中央人民政府决定。</li></ul><p>立法会共70议席</p><p>任期4年</p><p>35个议席：五个选区直选（300多万选民）</p><p>香港岛6席：中西区、湾仔区、东区、南区</p><p>九龙西6席：油尖旺区、深水埗区、九龙城区</p><p>九龙东5席：黄大仙区、观塘区</p><p>新界西9席：荃湾区、屯门区、元朗区、葵青区、离岛区</p><p>新界东9席：北区、大埔区、沙田区、西贡区</p><p>35个议席：29个功能界别</p><p>其中：</p><p>其他26界：26席</p><p>劳工界：3席</p><p>区议会第一界别（区议员互选1席）</p><p>区议会第二界别超级区议员（5席）由300多万选区选民直选，但是候选人提名（15个以上）及参选都来自区议会</p><p><img src="https://i.loli.net/2020/06/11/p9lvrZMm6tqkTUO.png" alt="立法会部分议席"></p><h1 id="三、区议会选举"><a href="#三、区议会选举" class="headerlink" title="三、区议会选举"></a>三、区议会选举</h1><p>任期4年，就市民日常生活事务向政府提供意见，没有立法权</p><p>18个选区</p><p>479席（每年会变化）当然议席27，民选议席452</p><p>将会影响：立法会中6席，选委会中117席的选出</p><p>2,943,842名登记选民投票，投票率71.23%     </p><p>57.44%vs41.32%：民主派vs建制派（实际票数）</p>]]></content>
    
    <summary type="html">
    
      香港选举制度概要
    
    </summary>
    
    
      <category term="笔记" scheme="http://landfill.cc/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Wish You A Speedy Recovery</title>
    <link href="http://landfill.cc/posts/speedy-revovery"/>
    <id>http://landfill.cc/posts/speedy-revovery</id>
    <published>2020-05-21T14:22:46.000Z</published>
    <updated>2020-07-15T14:20:48.868Z</updated>
    
    <content type="html"><![CDATA[<img src="https://i.loli.net/2020/07/15/RgwzoduGOUfcDTM.jpg" alt="WishYouASpeedyRecovery" style="zoom: 28%;" /><p>最近陪我妈动手术期间的一些记录。</p><ol><li>健康是首要的。倒不是想活多久，只是没有赴死的勇气，只能期盼活着期间能不用遭遇这些痛苦。生病的痛苦是最直接易感知的，打针、开刀都令人不寒而栗，放弃一部分人的完整性是接受治疗的前提。医院称得上是人类尊严平均水平最低的场所。</li></ol><ol start="2"><li>不生孩子。做父母的责任之重，不是我所能承受，这是出于自私；孩子会发现存在的痛苦真相，我想必只会是孩子成长过程中的阴影，而无法给与他们任何引导，这是出于责任。</li></ol><ol start="3"><li>努力赚钱。医院治疗相当花钱，一直以来爸妈对我期待很高，而我到现在为止负起的责任实在太少，应该很令他们失望。</li></ol><ol start="4"><li>找机会去一趟精神科。心理状态似乎又开始变坏了，越发憎恶自己。以前蛮好的，不知道这些年是怎么一步步变成今天这样的。徒劳地寻找不存在的答案不过是自我折磨。前不久看《阳光普照》大哭，完全受不了阿豪妈妈伤心，所以不论怎样一定会好好生活的。</li></ol><ol start="5"><li>从最近的生活经验和所见所闻再次验证了这一真理：生活果然就是永恒的疲惫啊。</li></ol><p>祝大家健康。</p>]]></content>
    
    <summary type="html">
    
      祝你早日健康
    
    </summary>
    
    
      <category term="经验" scheme="http://landfill.cc/categories/%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Thoughts" scheme="http://landfill.cc/tags/Thoughts/"/>
    
  </entry>
  
  <entry>
    <title>语言碎片 2020/05</title>
    <link href="http://landfill.cc/posts/thoughtsof202005"/>
    <id>http://landfill.cc/posts/thoughtsof202005</id>
    <published>2020-05-20T16:22:46.000Z</published>
    <updated>2020-09-27T15:09:39.517Z</updated>
    
    <content type="html"><![CDATA[<img src="https://cdn.jsdelivr.net/gh/paranoiddemon/picbed/imgs/wOzJXeVRL2tH8bs.png" alt="Neist Point Lighthouse"  /><p>1.<br>矮墙在面前颓然倒下<br>为风牺牲</p><p>2.<br>未来是尚未被复写的过去<br>黑色方碑刻着一切</p><p>3.<br>意识是痛苦的证明</p><p>4.<br>贫穷是恒久不灭的心悸</p><p>5.<br>想去Isle of Skye，观看灯塔</p><p>6.<br>被抛掷于此间的时候<br>漆黑，喑哑，无力<br>却充分感知到自我的存在<br>意识中徒劳地呼喊<br>没有一个上帝会来搭救<br>清醒后痛苦才汹涌地袭来<br>旁观甚至需要勇气</p><p>7.<br>摄影是被完全滥用的技术，人类从此失去了真诚</p><p>8.<br>阅读不提供宽慰、解脱和形而上的解答，但感到平静</p><p>9.<br>拉普拉斯妖 is watching you</p><p>10.<br>将来你必须从头开始，一点点挣脱，所有已经捆绑在身上的，绞索</p><p>11.<br>你相信什么？</p>]]></content>
    
    <summary type="html">
    
      胡言乱语inbox，查重率&lt;2%
    
    </summary>
    
    
      <category term="经验" scheme="http://landfill.cc/categories/%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Thoughts" scheme="http://landfill.cc/tags/Thoughts/"/>
    
  </entry>
  
  <entry>
    <title>政治哲学/Jonathan Wolff</title>
    <link href="http://landfill.cc/posts/political-philosophy"/>
    <id>http://landfill.cc/posts/political-philosophy</id>
    <published>2020-05-09T16:22:46.000Z</published>
    <updated>2020-06-30T01:09:30.205Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、自然状态"><a href="#一、自然状态" class="headerlink" title="一、自然状态"></a>一、自然状态</h1><h2 id="霍布斯"><a href="#霍布斯" class="headerlink" title="霍布斯"></a>霍布斯</h2><p>人的平等、人连续不断的追求幸福，即满足他们未来可能具有的任何欲求的权力</p><p>资源的稀缺，人对他人的恐惧和猜疑</p><p>人对人的战争</p><p>自然法（集体理性与个体理性，博弈论中的囚徒困境）</p><h2 id="洛克"><a href="#洛克" class="headerlink" title="洛克"></a>洛克</h2><p>存在着道德，自然法的约束，刚开始自然状态下资源不是稀缺的</p><h2 id="卢梭"><a href="#卢梭" class="headerlink" title="卢梭"></a>卢梭</h2><p>人主要受自我保存的欲望驱使</p><p>人类动机中的同情和怜悯</p><p>自然状态是不可持续的</p><p>人是在文明社会中才变得道德堕落的</p><h2 id="无政府主义"><a href="#无政府主义" class="headerlink" title="无政府主义"></a>无政府主义</h2><p>如何区分一个政府和一个依靠其他约束运行的社会</p><p>无政府主义的国家是你可以自由选择加入的</p><h1 id="二、国家证成"><a href="#二、国家证成" class="headerlink" title="二、国家证成"></a>二、国家证成</h1><h2 id="两个角度"><a href="#两个角度" class="headerlink" title="两个角度"></a>两个角度</h2><h3 id="洛克-自愿主义"><a href="#洛克-自愿主义" class="headerlink" title="洛克(自愿主义)"></a>洛克(自愿主义)</h3><p>认为人是生而自由、平等、独立的，他们并非自然而然地处于某个人的权威之下（普通人/主权者），合法的权力关系必定是人类创造和构建的。除了正当的惩罚外，唯有通过表达同意，你才会身处权威之下。</p><p>国家的正当性需诉诸同意和社会契约</p><h3 id="边沁（功利主义）"><a href="#边沁（功利主义）" class="headerlink" title="边沁（功利主义）"></a>边沁（功利主义）</h3><p>国家相较于其他方案，使得社会的幸福总量最大化，才具有正当性</p><h2 id="国家的特征（理想情况）"><a href="#国家的特征（理想情况）" class="headerlink" title="国家的特征（理想情况）"></a>国家的特征（理想情况）</h2><ul><li><p>在一定领域内垄断合法暴力，所有合法的武力都由国家来实施和监管（马克思韦伯）</p></li><li><p>为其领土内的所有人提供保护</p></li></ul><h2 id="证成国家"><a href="#证成国家" class="headerlink" title="证成国家"></a>证成国家</h2><p>需要证明普遍的政治义务，即有服从法律、纳税、保卫国家、爱国等的义务，讨论主要集中于服从法律的义务。</p><p>普遍的政治义务不是指在所有时间服从所有法律（也需要考虑法律的正当性等），而是原则这个国家范围内的所有人（当然也存在特权者）有道德义务遵守法律与指令。</p><h2 id="社会契约（自愿主义）"><a href="#社会契约（自愿主义）" class="headerlink" title="社会契约（自愿主义）"></a>社会契约（自愿主义）</h2><h3 id="自愿的义务"><a href="#自愿的义务" class="headerlink" title="自愿的义务"></a>自愿的义务</h3><p>洛克的自愿主义：需要每个人以某种方式赋予了国家凌驾于其上的权威，而仅仅说国家符合我的利益并不能推出国家的正当性。</p><h3 id="历史的同意"><a href="#历史的同意" class="headerlink" title="历史的同意"></a>历史的同意</h3><p>但在实践中，是历史中真实存在这样一份契约吗。或者契约真实存在，那对子孙后代又有何约束力？原始契约学说无法说明这一问题。</p><h3 id="默示同意"><a href="#默示同意" class="headerlink" title="默示同意"></a>默示同意</h3><p>洛克：</p><blockquote><p>每个人只要占有或享用了任何政府的任何一部分领地，就因此表达了他的默示同意。从而在他与整个政府里的任何人一同享用期间，有义务服从该政府的法律</p></blockquote><p>休谟的反驳：</p><blockquote><p>对于一个贫困的、不懂外语和外国风俗、靠着自己所得的微薄工资度日的农民或工匠，我们能够认真地说他对于是否离开自己的国家具有选择的自由吗？如果能够这样说的话，那么，对于一个睡梦中被人搬到船上、若要离船则只有跳海淹死的人，我们也可以同样宣称，他继续留在船上就表示他自愿地同意了接受船主的统治。</p></blockquote><p>卢梭：在一个“自由的”国家才能这样说，其言下之意是，在一个自由国家，做出不同意行为（离开国家的领土）是非常简单的。</p><blockquote><p>因为否则的话，家庭、财产、无处容身、生活的需要以及暴力等等，都可以不顾一个居民的意愿如何而把他留滞在国内，这时候，单凭他的居住就不能在断定他是同意契约还是破坏契约了。</p></blockquote><p>在现代国家中显然默示同意的条件难以被满足</p><h3 id="假想的同意"><a href="#假想的同意" class="headerlink" title="假想的同意"></a>假想的同意</h3><p>如果身处自然状态没那么我们会做些，想象没有国家的状态，如果我们是理性的，会尽可能的重新签订社会契约，创立国家。</p><p>反驳：假想的同意行为并不是同意行为，这和社会契约所要求的同意不一致，只能表明某类国家值得同意，是国家的特征而非我的同意提供了正当性，不是对国家的自愿主义辩护，而更像是一种功利主义辩护。</p><p>重构假想同意：我们虽未明确表示同意，但是在某种意义上可以说我们大部分人会同意，有同意国家的倾向，而假想契约的是使我们意识到我们的真实想法。但这是一种很弱意义上的同意，在其他法律或道德语境中，未表达出来甚至尚未得到承认的同意倾向很少具有约束力。</p><p>而且存在无政府主义者在假想后仍然反对国家，明确的表达了不同意。</p><h3 id="无政府主义-1"><a href="#无政府主义-1" class="headerlink" title="无政府主义"></a>无政府主义</h3><p>如果我们找不到一种办法从一些可接受的前提来证成国家，那么至少从道德上说，我们似乎就不得不接受某种无政府状态。这一批评策略似乎是无政府主义者最强有力的武器。没有人问过我，我们是否应该有一个国家，警察在行动时也没有征求过我的许可。因此，无政府主义者主张，国家与警察都是在以不合法的方式行动，至少在和我打交道时是这样。</p><p>服从国家的唯一理由是明智（对惩罚的恐惧）</p><p>负责任的公民不应该盲目地遵循法律，而应该始终对法律是否正当的问题上运用自己私人的判断。如果法律不正当就没有道德理由服从。</p><p>但是所有人都以私人判断，就会回到混乱状态。</p><p>在合理范围内接受一套共同的法律是更好选择。</p><h2 id="功利主义"><a href="#功利主义" class="headerlink" title="功利主义"></a>功利主义</h2><h3 id="直接功利主义"><a href="#直接功利主义" class="headerlink" title="直接功利主义"></a>直接功利主义</h3><p>当服从比不服从给社会带来更大的幸福</p><p>违法者的特许状（如果拿走别人的财产带来社会整体更大的幸福）</p><h3 id="间接功利主义"><a href="#间接功利主义" class="headerlink" title="间接功利主义"></a>间接功利主义</h3><p>需要一系列得到尊重的法律，不是由个人来考虑遵循法律对社会幸福水平的影响，而是从社会整体的角度。</p><h3 id="对功利主义的批评"><a href="#对功利主义的批评" class="headerlink" title="对功利主义的批评"></a>对功利主义的批评</h3><p>功利主义的论证：</p><p>前提1：从道德上，最好的社会是幸福得到最大化的社会</p><p>前提2：国家比自然状态更能促进幸福</p><p>前提3：国家与自然状态是我们仅有的两种选择</p><p>结论：我们有道德义务缔造并支持国家</p><p>各种无政府主义者会反对前提2，3姑且不论；</p><p>前提1也存在着道德风险，如果牺牲个体造就社会的幸福增加（替罪羊问题），会导致极大的非正义，惩罚无辜可以在道德上是正确的。功利主义也可以用来证成奴隶制。</p><p>功利主义需要融入权利理论（不受迫害的权利）。</p><h2 id="公平原则"><a href="#公平原则" class="headerlink" title="公平原则"></a>公平原则</h2><p>享受了国家的利益，又不承受有助于这些利益的必要负担，是不公平的。（对同意理论的改进）</p><p>休谟：从长期看，服从法律符合每个人的利益，人类并不是非常善于理性地行动，理性作为人的驱动力太弱。</p><p>这个观点背后的原则由法律理论家和哲学家哈特（H.L.A.Hart，1907—1992）明确提出</p><blockquote><p>如果一些人根据某些规则从事某种共同事业，并因此限制了他们的自由，那么那些根据要求服从了这种限制的人就有权利要求那些受益于他们的服从的人做出同样的服从。</p></blockquote><p>诺齐克的反驳：没有主动要求的利益不能创设任何回报的义务。得到了和接收了利益是不同的。</p><p>这又回到了默示同意的问题了，如何明确表示接收和拒绝利益。</p><h1 id="三、谁应当统治"><a href="#三、谁应当统治" class="headerlink" title="三、谁应当统治"></a>三、谁应当统治</h1><h2 id="民主含义及其争论"><a href="#民主含义及其争论" class="headerlink" title="民主含义及其争论"></a>民主含义及其争论</h2><h3 id="多数派统治和保护个人权利"><a href="#多数派统治和保护个人权利" class="headerlink" title="多数派统治和保护个人权利"></a>多数派统治和保护个人权利</h3><p>多数派暴政（托克维尔）</p><p>人民自己统治自己也可能存在压迫，因为人民不是同质的，具有非单一的利益</p><h3 id="代议制与直接民主"><a href="#代议制与直接民主" class="headerlink" title="代议制与直接民主"></a>代议制与直接民主</h3><h3 id="投票程序等其他争议"><a href="#投票程序等其他争议" class="headerlink" title="投票程序等其他争议"></a>投票程序等其他争议</h3><h2 id="反民主的柏拉图"><a href="#反民主的柏拉图" class="headerlink" title="反民主的柏拉图"></a>反民主的柏拉图</h2><p>专家统治（护卫者），统治是一种技能，应该交由专业的人，征求大众意见导致灾难，实际上一种仁慈的独裁制。</p><p>反驳：</p><ol><li><p>把不受制约的权力交给专家也会导致灾难，谁来监督护卫者</p></li><li><p>如何任命护卫者</p></li><li><p>投票的意义：发现公共善，人民利益的反映。</p><blockquote><p>孔多塞的论证：</p><p>前提1：一般人必须有高于五成的可能性做出正确判断<br>前提2：每个人必须按照他理解的共同善来投票而非特殊利益<br>结论：在大量人参与投票的情况下，几乎肯定可以得到正确的结果</p></blockquote></li><li><p>民主过程本身就包含了有价值的东西：自由和平等。<br>人可以在决策中有发言权等自由，且这种自由被赋予所有人</p></li></ol><h2 id="卢梭与公意"><a href="#卢梭与公意" class="headerlink" title="卢梭与公意"></a>卢梭与公意</h2><p>general will(公意)：要求同等程度上符合每个人的政策，普遍利益<br>the will of all（众意）：每个人特殊意志的产物</p><p>公意制定影响所有公民的法律，我由法律统治而非统治者统治，政府不制定法律，而是在具体事务中按照法律行事</p><ol><li><p>是否存在一种公意同等影响每一个人（不同阶级、利益立场的人）？</p></li><li><p>即便有一种公意，怎么能得到他，人为什么要按照公意而不是特殊利益投票？</p></li></ol><ul><li>消除阶层，不能有巨大的不平等；</li><li>要么不应该有党派和派系，要么应该有很多；这样特殊群体对整个集体的决定只有很小的影响；</li><li>个人必须非常强烈的认同作为一个整体的群体。比如通过公民美德教育的方式来巩固社会纽带。人们要被教育塑造得为了国家而忘记自我。（有些批评者认为这有法西斯的倾向）</li><li>审查制：监察官鼓励人们遵循大众道德</li><li>公民宗教：每个公民都应该信奉某种宗教，除了私人道德以外，每个人都应该信奉公民宗教</li></ul><p>平等：卢梭的公民不包括女性。<br>自由：无神论被禁止；不宽容其他宗教的宗教也得不到宽容；所有人都必须认可公民宗教；个人似乎不再有任何背离传统的生活实验</p><p>想到这些限制性的、很不开明的背景，我们可能会问，卢梭如何还能坚持说他已经解决了下述问题：如何找到一种结合形式，在这种结合中，“每一个与全体相联合的个人只服从其本人，并且仍然像以往一样自由”？</p><p>积极自由：卢梭所持的自由观是后来以赛亚·伯林所谓的“积极”自由观。我们将在第四章更详细地考察这个观念，不过这种自由观的基本立场是，自由不仅关乎能够遵循自己的欲望且不受他人约束（一种“消极的”观念），它还要求做出某些行为。通常，主张积极自由的理论家用“过理性人会选择的那种生活”来界定自由。就卢梭而言，这样一种理性的生活唯有在一个公民社会中才有可能。“只有嗜欲的冲动便是奴隶状态，而唯有服从人们为自己所制定的法律，才是自由。”</p><p>唯有服从公意行动才是真正自由的，这会导致<strong>被强迫成为自由的</strong></p><h3 id="对卢梭的批评"><a href="#对卢梭的批评" class="headerlink" title="对卢梭的批评"></a>对卢梭的批评</h3><ol><li>公意概念难以实现</li><li>对少数派的观点：被强迫成为自由</li><li>服从公意不是自由的（存在人反对公意）</li><li>不提倡民主集会，反对政治争论</li></ol><p>卢梭为了论证民主从工具角度是正当的，把社会团结的纽带勒的过紧，可以实现平等，但不等实现自由（多样性和多元化）</p><h2 id="参与式民主"><a href="#参与式民主" class="headerlink" title="参与式民主"></a>参与式民主</h2><p>直接民主，不仅要制定法律，还要参与所有具体事务</p><p>反对：</p><ol><li>难以实现，效率低</li><li>谁来制定议程，相对于决策，提出问题同样重要</li><li>政治生活也并不是全部，许多人也关心政治之外的事情</li></ol><h2 id="代议制民主"><a href="#代议制民主" class="headerlink" title="代议制民主"></a>代议制民主</h2><p>约翰穆勒</p><p>专制国家导致消极被动，塑造的民族不关心国家事务，不仅影响个人，也影响国家繁荣</p><p>现代社会过于庞大，直接民主不太可能</p><p>公民身份（citizenship）教育的重要性：参与陪审团和地方政府</p><p>权力分散于制衡，对选举者的制约</p><p>公民应该根据他们对普遍利益的理解来投票，出于公共善和良心</p><p>公开投票，防止选民出自个人利益投票</p><p>有一定文化水平和经济水平才能投票，防止选民太过无知，无法看到公共善</p><p>复票制（Plural voting）：先选出选举人，在由他们产生议员</p><p>对少数派的保护，限制政府活动的合法领域</p><h1 id="四、自由的地位"><a href="#四、自由的地位" class="headerlink" title="四、自由的地位"></a>四、自由的地位</h1><p>国家应该有多大的权力？</p><p>无政府主义与霍布斯是两个极端</p><p>穆勒的答案很激进，又简单得令人耳目一新。穆勒的自由原则（伤害原则）宣称，只有当一个人有可能会伤害到另一个人时，你才能限制其行动自由而不至于不正当。而不是以专断的习俗和大众道德来评判。</p><p>适用于文明共同体的任何成员，各项能力已臻于成熟，孩子和野蛮人是除外的，比如孩童就不应该有自由决定是否学习</p><h2 id="思想自由"><a href="#思想自由" class="headerlink" title="思想自由"></a>思想自由</h2><p>对穆勒来说，要注意的第一件事就是，一个观点不受欢迎并不能构成压制它的理由：“如果整个人类除一人之外全都持有一种意见，而只有那一人持有相反的意见，其他所有人不让那个人说话并不比那个人不让其他所有人说话（如果他有那种权力的话）更为正当。</p><p>穆勒主张，我们有很好的理由欢迎人们提倡哪怕是不受欢迎的观点。压制这些观点就是“对包括当代人与后代人在内的全人类的剥夺”。</p><p>穆勒主张，无论有争议的观点是对还是错，抑或既有对的也有错的，拒绝让其发声对我们绝没有任何好处。如果我们压制一个正确的观点（或一个部分正确的观点），我们就失去了以谬误（整个谬误或部分谬误）换真理的机会。而如果我们压制一个错误的观点，我们就以一种不同的方式有所失：我们失去了一个质疑、再思考并有可能重新肯定我们正确观点的机会。因此，压制并不能给我们带来任何好处，无论所压制的观点是不是真理。</p><p>不能假定自己不可能出错，许多被认为是确定无疑的观点和信念已经被证实是荒谬的（地球是平的）</p><p>这就证明了人类会犯下巨大的错误。穆勒认为，我们绝没有权利主张自己不可能出错。</p><blockquote><p>认定某一意见正确乃是因为它在一切与之竞争的场合中都未被驳倒，与认定它正确乃是为了它不受反驳，这两者之间有着天壤之别。</p></blockquote><p>即使从功利主义的角度，凭什么断定一种观念会导致更多的危害而非好处。（不信上帝、核武器知识）</p><p>信仰真理是一种实现幸福的途径</p><h2 id="对他人的伤害"><a href="#对他人的伤害" class="headerlink" title="对他人的伤害"></a>对他人的伤害</h2><p>唯有造成伤害才能限制一个人的自由。如何定义伤害，边界在哪里。</p><h2 id="证成自由原则"><a href="#证成自由原则" class="headerlink" title="证成自由原则"></a>证成自由原则</h2><p>自然权利：生命权、思想、言论自由、自由机会、迁徙自由、投票和竞选</p><p>自然权利是基本的、公理性的，但如何为这些权利辩护。</p><p>自然权利是自明的，不是从其他某种论据推出来的，那么为什么不同理论家对有什么权利却有不同看法</p><p>边沁：权利是法律的产物，不存在自然权利，洛克完全否认这种观点。</p><p>穆勒既不能接受自然权利，又不能依靠传统权利，而是从功利主义的角度推导的</p><p>henry sidgwick: government house utilitarianism</p><p>私人领域（不受干涉）和公共领域（受到干涉），如何划分界限，穆勒没有明说，只是从功利的角度去得出答案</p><p>功利主义与自由的冲突：功利主义鼓励家长式的干预，如果传统道德支配的社会是更符合功利主义的？</p><p>要理解穆勒对这个问题的回应，我们需要再看看《论自由》里那段话的措辞，在那段话里，穆勒宣称他忠实于功利：</p><blockquote><p>在所有伦理问题上，我最终都诉诸功利；但这里的功利必须是最广义上的功利，它基于一个作为进步性存在的人永久不变的利益。</p></blockquote><h2 id="个性与进步"><a href="#个性与进步" class="headerlink" title="个性与进步"></a>个性与进步</h2><p>个性的自由发展是幸福首要且必不可少的要素之一</p><p>虽然自由并非总是带来进步，但进步唯一可靠和恒久的源泉是自由</p><ol><li><p>即便人们会搞错，但个人与其他任何人相比，仍然更有可能正确地看到什么东西会使自己幸福</p><p>穆勒声称，独立地做出判断确实会带来更好的后果。但是他的意思并不是说，任何人都不应该影响他人的行为。他特别强调，如果我们觉得别人正在采取一种愚蠢或有害的行为，我们每个人都有义务尽力说服他们相信自己错了。我们可以跟他们讲道理，或者请求他们。但是我们能做的也仅限于此，绝不能采用武力。</p><p>一个人不顾别人的建议与警告可能犯下的错误，与容许别人强制他去做他们认为对他有好处的事情，危害要小得多。</p></li><li><p>从长远看，它会导致更好的决定</p><p>不仅如此，自由选择的运用本身对于人性的充分发展来说也是至关重要的。穆勒认为，那些做习俗之奴隶的人永远也不能成长为全面发展的成功的人；未必是因为他们不会幸福，而是因为他们不能发展人类最独特的一种能力，即选择能力。</p></li><li><p>生活实验是社会进步的主要因素</p><p>正如只要人类未臻于完善，存在着不同意见就是有益的，同样，存在着不同的生活试验也是有益的；各种品格只要不伤及他人就应该给予其自由发展的空间；不同生活方式的价值应该通过实践去证实。……这是构成个性与社会进步的主要因素。</p></li></ol><p>批评：对进步的乐观主义</p><p>他最重要的观点就是这样一个假定，即人类是可以进步的，能够从经验中学习。最近几个世纪的经验是否表明这个观点是错误的呢？如果是这样，那么穆勒的观点就失去了灵魂。人类持续不断地重复自己的错误。如果人们不会从他人的经验中学习，那么穆勒就不再有理由鼓励生活试验了。如果我们并不准备学习，其他人向我们展示新的生活方式又有什么意义呢？没有了这样一种对生活试验的辩护，个性与自由基于穆勒给出的那些论证而获得的正当性就大打折扣了。实际上，已经有人指出，<strong>人类通常处在穆勒专门用来描述“孩子和野蛮人”的那种状态：没有能力通过自由和平等的讨论而进步。</strong>而且，正如穆勒本人所说，这样的人不适合享受自由，至少根据功利主义的计算不适合。或许对人类进步的可能性所持的这种悲观主义是一种严重的夸大其词。但是如果真理存在于某种中间立场，如果人类并不如穆勒所设想的那样善于进步，用来支持自由的功利主义论据就相应地削弱了。进步是穆勒学说的基石。</p><h2 id="自由作为一种内在善"><a href="#自由作为一种内在善" class="headerlink" title="自由作为一种内在善"></a>自由作为一种内在善</h2><p>实现社会幸福最大化也许要求一个非自由的社会，难道就是可取的吗？</p><p>穆勒认为自由是幸福的一部分，而不是独立的价值</p><h2 id="自由主义的问题"><a href="#自由主义的问题" class="headerlink" title="自由主义的问题"></a>自由主义的问题</h2><p>毒品、酗酒、卖淫（传统道德的作用）</p><p>马克思的批评：政治解放（自由主义）相对于等级制和充满歧视的国家是一种进步，但是是实现人类解放的障碍（分离性，以自我为中心的，市民社会的对抗倾向），是一种肤浅的学说</p><p>社群主义(comunitarianism) </p><p>积极自由和消极自由（以赛亚柏林）</p><h1 id="五、分配正义"><a href="#五、分配正义" class="headerlink" title="五、分配正义"></a>五、分配正义</h1><h2 id="财产权证成"><a href="#财产权证成" class="headerlink" title="财产权证成"></a>财产权证成</h2><p>初始获取正义、转让正义、矫正正义（诺齐克）</p><p>洛克：掺入劳动论</p><p>财产所有权就是盗窃（蒲鲁东）</p><h2 id="自由市场"><a href="#自由市场" class="headerlink" title="自由市场"></a>自由市场</h2><p>功利主义理论不关心怎么来的，关心转让正义</p><p>计划经济需要计划者具备一定程度上的全知全能与仁慈，人类是做不到这一点的</p><p>反对市场：人的异化（恩格斯），剥削，非正义的不平等，浪费，经济危机</p><p>异化是资本主义特有，还是一般的现代技术特有？福利国家的修正</p><p>平等主义的分配会抑制主动精神和进取心</p><h2 id="罗尔斯的正义理论"><a href="#罗尔斯的正义理论" class="headerlink" title="罗尔斯的正义理论"></a>罗尔斯的正义理论</h2><p>一种假想的契约</p><ol><li><p>立约环境（原初状态）</p><p>无知之幕：不知道天资、阶级、社会地位、性别、种族，特殊心理倾向（道德宗教哲学观），社会经济状况，文明程度，处于正义环境（介于匮乏与丰裕之间）</p><p>弱的善理论：想要primary goods（自由、机会、财富、收入、自尊的社会基础）</p><p>行动者：理性，mutually disinterested</p></li><li><p>选择正义原则</p><p>a. 每个人都要平等的权利享有一整套最为广泛且相同的基本自由，但这些自由要与所有人类似的一套自由相容（自由原则）</p><p>b.社会与经济的不平等应该被安排得：</p><ul><li>符合处于最不利地位者的最大利益（差别原则）</li><li>职位与地位在公平的机会平等条件下向所有人开放（公平机会原则）</li></ul><p>自由原则是最优先的，公平机会原则相对于差别原则也具有优先性</p><p>自由原则和公平机会原则比较容易从理性上推导</p><p>差别原则推导：</p><ul><li><p>预期功利最大化</p></li><li><p>maximin（小中取大）</p><ul><li><p>物质条件的约束（资源有限）</p></li><li><p>逻辑约束(每个人都比其他人富裕)</p></li><li><p>形式约束：公开性约束，契约中的条款都是互相知情的（反驳总督府里的功利主义）</p><p>终结性finality，承诺的压力，当安排对你不利时，是无法改变的</p></li></ul><p>只有小中取大不冒险，因为是一次性的不可反悔的选择</p></li><li><p>maximax（大中取大）</p></li><li><p>有条件限制的功利最大化：无法明确条件限制，最终会变成小中取大</p></li></ul></li><li><p>为什么要选择这种理论</p><p>对罗尔斯的批评<br>弱的善理论是基于现代资本主义生活的<br>个人能力相对于社会赋予的因素的微不足道</p></li></ol><h2 id="诺齐克与模式"><a href="#诺齐克与模式" class="headerlink" title="诺齐克与模式"></a>诺齐克与模式</h2><p>限制财产是限制自由，与自由原则相悖</p><p>历史性正义理论 historical：了解如何获得资源和资源分配依据</p><p>即时性正义理论 end -state： 只看到某个时点的分配状况</p><p>模式化理论：根据xx来分配</p><p>非模式化理论：程序性理论，通过正当程序获得goods</p><p>模式的变化</p><ol><li><p>任何模式都会被打破</p></li><li><p>从一种模式到另一种模式是处于自愿，如果模式1是正义的，模式2也是正义的（纯粹自愿也不一定正义的）</p></li><li><p>模式想要强制实施就只能让自由付出沉重代价。不断地干预分配</p></li></ol><h1 id="六、当代问题"><a href="#六、当代问题" class="headerlink" title="六、当代问题"></a>六、当代问题</h1><p>女性主义、种族问题、性取向，压迫、传统价值观，全球正义，移民，子孙后代。</p><p>论述较浅</p><h1 id="附录：书单"><a href="#附录：书单" class="headerlink" title="附录：书单"></a>附录：书单</h1>]]></content>
    
    <summary type="html">
    
      《政治哲学》乔纳森·沃尔夫 阅读笔记
    
    </summary>
    
    
      <category term="笔记" scheme="http://landfill.cc/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>说一说在我老家，人们的生存状况</title>
    <link href="http://landfill.cc/posts/home-waste-land"/>
    <id>http://landfill.cc/posts/home-waste-land</id>
    <published>2020-04-19T16:22:46.000Z</published>
    <updated>2020-07-26T09:33:45.594Z</updated>
    
    <content type="html"><![CDATA[<p>（一）</p><p>以前回我奶奶家过年的时候，附近邻居有个姐姐，因为眼睛小，笑起来总是眯成一条缝，人家都叫她眯眯。我算不上认识她，我和她唯一的交集，是有一次她路过我家门口，在她快走远的时候，我恶作剧似地老远喊了声“眯眯”，她停顿一下回过头，也不怎么生气，反而是眯起眼笑了起来。</p><p>她现在疯了。清明节回我奶奶家听说的。几年前她怀孕，她爹嫌弃男孩家经济条件太差，强行拆散了这段关系，带她去做了流产。后来她爹给她相亲了几次，都是订婚不久男方又反悔，多次“退货”，在农村的讲述中用的是这个词。具体的缘由不得而知，有人说是精神状态出了问题，也有传言说是因为流产无法再有孩子了。再后来，眯眯就疯了。常常自言自语，有时候会无端端骂人。</p><p>眯眯疯了之后，每天和她妈妈形影不离，晚上也是和她妈妈一起睡的。她妈妈去年突发脑溢血去世，她爹没过几个月就再婚了，对眯眯的态度的是：谁要就赶快带走，不要一分钱彩礼。“眯眯现在可怜哦”，我奶奶如此评价。十多年前她回头的那个笑容，我可能再也无法忘记了。</p><p>（二）</p><p>很多人可能不知道农村结婚有多么简单。先找人介绍认识，男女双方可能只用见一两次面，在双方家长的陪同下，甚至不是单独的约会，就可以确定一桩婚事。如果双方（家族）凭借着一两次的了解都比较满意的话，就可以订婚，领结婚证了，不举办婚礼的话，这事情就算结束了。虽然听上去很不现代，但这就是大部分农村家庭的普遍状况。</p><p>虽然我对婚姻总体上都抱有一种悲观的立场，但这样的婚姻可能更需要一些运气。双方达成的更像是一个搭伙生活的契约，进而保持传宗接代的传统。我发现他们都是这样毫不审视地生活，完全天然地接受命运的一切安排，毫无例外。生活地幸福与否那就是个概率问题了。我有时候会有些羡慕，因为我即使知道我是怎么样的宿命，也基本上无法改变太多。除了更深更明白的绝望，审视自己的生活对我没有其他益处。</p><p>（三）</p><p>大概有十来年没有回家做清明，这些年间先后失去了三位亲人，从我爸妈那也常会听说某些认识的人的离世。死亡成了越发日常的事情，这可能就是年纪增长的一个佐证吧。生老病死，一代人接续一代人，装着家族记忆的坟一座座地立起来，孩子不断地出生，像是一个无法打破的坚实循环。</p><p>那天在山上，新草铺满了山坡，燃烧的黄纸化成成片的灰烬，在半空飘扬。祭扫有很多的仪式，“到你们这代或许就断了“，一位长辈无奈地说。我看见我爸在远处抽烟的背影，内心有些悲伤。将来有一天，我也将站在那个位置。</p><p>我的小外甥女纤雪今年十岁，时隔一年多没见，她还记得我叫我舅舅。她外公也就是我舅舅六年前也是脑溢血去世的，他生前对我很好。正月十七去世的，正月拜年还见过的，没想到会是最后一次。在我舅舅的坟前，我问纤雪认识外公吗，她说不记得了。我给了她点零花钱让她买些喜欢的东西，我问她喜欢什么，她说喜欢钱。我说你要这么多钱干什么，她说要给她妈妈买件新衣服，还让我不要生气。</p><p>在那几个小时里，我不停地和她说，近乎单方面的要求：你要好好上课，将来上大学哦。我知道我对她的人生做不了什么，对她说的这些话，与其说是对她的劝诫，更不如说是一种良心上的自我安慰。</p><p>（四）</p><p>其实在城市的生活又何异于孤魂野鬼。拥挤的、昏暗的出租屋，夏天充满异味的地铁、公交，写字楼里的格子间，伤心的街道，人来人往的娱乐场，失落人的渺小内心。这一切的一切和坟墓有多大的分别。人是城市的燃料，这台巨大的工业机器制造出绚丽的幻象，从此有了永恒的动力，而燃烧一个人的时间不过是永恒里的须臾，变成废料排出体外几乎是绝大部分的人归宿，被集体撒向旷野、江河和土坡，滋养出下一批全新的燃料。曾经熊熊燃烧过的我，最终也将步向我的命定，如果可以的话，请把我撒向大海，成为大海，化作比城市更深刻的永恒，有蚀刻一切的气势。而不是给我一块墓碑，证明我曾卑微地存在。</p>]]></content>
    
    <summary type="html">
    
      清明节见闻
    
    </summary>
    
    
      <category term="经验" scheme="http://landfill.cc/categories/%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Thoughts" scheme="http://landfill.cc/tags/Thoughts/"/>
    
  </entry>
  
</feed>
